{"version":3,"file":"static/js/222.a458fd9b.chunk.js","mappings":"kLAEA,MAgCA,EAhCeA,IAA6D,IAA5D,WAAEC,EAAU,gBAAEC,EAAe,iBAAEC,GAAuBH,EACpE,OACEI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yDAAwDC,SAAA,EACrEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,WAAWJ,UAAU,uBAAsBC,UAClDC,EAAAA,EAAAA,KAAA,OACEG,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OAAMR,UAEXC,EAAAA,EAAAA,KAAA,QACEQ,EAAE,iGACFD,KAAK,cAKVb,EAAWe,KAAKC,IACfV,EAAAA,EAAAA,KAAA,OAEEW,MAAO,CAAEC,OAAQ,WACjBd,UAAWF,IAAqBc,EAASG,GAAK,MAAQ,GACtDC,QAASA,IAAMnB,EAAgBe,EAASG,IAAId,SAE3CW,EAASK,MALLL,EAASG,QAQd,ECZV,EAlBgBpB,IAAsD,IAArD,QAAEuB,EAAO,cAAEC,EAAa,eAAEC,GAAqBzB,EAC9D,OACEO,EAAAA,EAAAA,KAAA,OAAKF,UAAU,8CAA6CC,SACzDiB,EAAQP,KAAKU,IACZnB,EAAAA,EAAAA,KAAA,UAEEF,UAAW,mBACToB,IAAmBC,EAAON,GAAK,SAAW,IAE5CC,QAASA,IAAMG,EAAcE,EAAON,IAAId,SAEvCoB,EAAOC,OANHD,EAAON,OASZ,E,wECAV,MA6JA,EA7JgBpB,IAAsB,IAAD4B,EAAAC,EAAAC,EAAA,IAApB,OAAEJ,GAAa1B,EAC9B,MAAM+B,EAAaC,aAAaC,QAAQ,aAClCC,EAAiBH,EAAaI,KAAKC,MAAML,GAAc,KACvDM,EAAQH,SAAoB,QAANN,EAAdM,EAAgBI,YAAI,IAAAV,OAAN,EAAdA,EAAsBW,aAC9BC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACVC,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,GAEnCC,EAAOrB,SAAc,QAARG,EAANH,EAAQsB,cAAM,IAAAnB,OAAR,EAANA,EAAgBoB,UAgB7B,IARAC,EAAAA,EAAAA,YAAU,KAENL,EADW,aAATE,EAIJ,GACC,CAACA,KAECrB,EACH,OAAO,KAqDT,OACEnB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,UAC1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAAD,SAAKoB,EAAOC,SACZpB,EAAAA,EAAAA,KAAA,QAAMF,UAAU,OAAOa,MAAO,CAC5BiC,WAAY,cACZC,WAAY,IACZC,SAAU,OACVC,WAAY,QACZhD,UACAC,EAAAA,EAAAA,KAACgD,EAAAA,GAAQ,CAAAjD,SAAEoB,EAAO8B,YA4CnBZ,GACCrC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,gBAAgBgB,QAASA,IAzG/BK,KAGlB,OAAQA,aAAM,EAANA,EAAQsB,OAAOS,WACrB,IAAK,WACHjB,GAASkB,EAAAA,EAAAA,IAAa,IACtBC,YAAW,KACTjB,EAAS,YAAY,GACpB,KACH,MACF,IAAK,cACEL,GAGHG,GAASoB,EAAAA,EAAAA,IAAa,mBACtBlB,EAAS,gBAHTF,GAASqB,EAAAA,EAAAA,KAAa,IAKxB,MACF,IAAK,iBACExB,EAGHK,EAAS,SAFTF,GAASqB,EAAAA,EAAAA,KAAa,IAIxB,MACF,IAAK,aACH,IAAKxB,EAEH,YADAG,GAASqB,EAAAA,EAAAA,KAAa,IAGxBrB,GAASsB,EAAAA,EAAAA,IAAkB,IAC3BH,YAAW,KACTjB,EAAS,qBAAqB,GAC7B,KACH,MACF,IAAK,cACHA,EAAS,UACT,MACF,QACEF,GACEuB,EAAAA,EAAAA,IAAU,CAERC,QAAS,IAAItC,EAAOsB,OAAOiB,wBAC3BlB,KAAM,WAId,EA0DuDmB,CAAWxC,GAAQpB,SACjEoB,EAAOsB,OAAOiB,aAGjB1D,EAAAA,EAAAA,KAAA4D,EAAAA,SAAA,CAAA7D,SACGoB,SAAAA,EAAQsB,OAAOiB,WACd1D,EAAAA,EAAAA,KAAA,KACE6D,OAAO,SACPC,KAAM3C,SAAc,QAARI,EAANJ,EAAQsB,cAAM,IAAAlB,OAAR,EAANA,EAAgB2B,UACtBpD,UAAU,gBACVC,SAECoB,EAAOsB,OAAOiB,UAAYvC,EAAOsB,OAAOiB,UAAY,KAGvD,SAKJ,E,0CC5JV,MA2FA,EA3FsBK,KAAO,IAADC,EAAAC,EAC1B,MAAM,KAAElC,EAAI,UAAEmC,EAAS,WAAEC,IAAeC,EAAAA,EAAAA,OAEtCrC,KAAMsC,EACNF,WAAYG,EACZJ,UAAWK,IACTC,EAAAA,EAAAA,OACG5E,EAAkB6E,IAAuBlC,EAAAA,EAAAA,UAAwB,OACjErB,EAAgBwD,IAAqBnC,EAAAA,EAAAA,UAAwB,MAYpE,IAVAI,EAAAA,EAAAA,YAAU,KACR,GAAIZ,GAAQA,EAAKA,KAAK4C,OAAS,EAAG,CAChC,MAAMC,EAAgB7C,EAAKA,KAAK,GAChC0C,EAAoBG,EAAc/D,IAC9B+D,EAAc5D,QAAQ2D,OAAS,GACjCD,EAAkBE,EAAc5D,QAAQ,GAAGH,GAE/C,IACC,CAACkB,IAEAmC,GAAaC,EACf,OACEnE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yDAAwDC,UACrEC,EAAAA,EAAAA,KAAC6E,EAAAA,EAAM,MAIER,SAAS,QAANL,EAAHK,EAAKtC,YAAI,IAAAiC,GAAW,QAAXC,EAATD,EAAWc,iBAAS,IAAAb,GAApBA,EAAsBlC,KAArC,MAEMrC,GAAaqC,aAAI,EAAJA,EAAMA,OAAQ,GAgB3BgD,EAAuBrF,EAAWsF,MACrCC,GAAaA,EAAIpE,KAAOjB,IAErBoB,GAAU+D,aAAoB,EAApBA,EAAsB/D,UAAW,GAEjD,OACEnB,EAAAA,EAAAA,MAAA+D,EAAAA,SAAA,CAAA7D,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cACfD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,EAEtCC,EAAAA,EAAAA,KAACkF,EAAM,CACLxF,WAAYA,EACZC,gBA1BqBwF,IAC3BV,EAAoBU,GACpB,MAAMJ,EAAuBrF,EAAWsF,MACrCC,GAAaA,EAAIpE,KAAOsE,KAEvBJ,aAAoB,EAApBA,EAAsB/D,QAAQ2D,QAAS,GACzCD,EAAkBK,EAAqB/D,QAAQ,GAAGH,GACpD,EAoBMjB,iBAAkBA,KAGpBI,EAAAA,EAAAA,KAAA,OAAKF,UAAU,0CAIfE,EAAAA,EAAAA,KAACoF,EAAAA,EAAM,CAACC,QAAQ,eAGhBxF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iDAAgDC,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,UACzBC,EAAAA,EAAAA,KAACsF,EAAO,CACNtE,QAASA,EACTC,cA/BesE,IACzBb,EAAkBa,EAAS,EA+BjBrE,eAAgBA,OAGpBlB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,SACxBmB,IACClB,EAAAA,EAAAA,KAACwF,EAAO,CACNrE,OAAQH,EAAQgE,MACb7D,GAAgBA,EAAON,KAAOK,gBAO1C,C","sources":["pages/profile/components/notifications/Header.tsx","pages/profile/components/notifications/Sidebar.tsx","pages/profile/components/notifications/Content.tsx","pages/profile/Notifications.tsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\n\nconst Header = ({ categories, onCategoryClick, selectedCategory }: any) => {\n  return (\n    <div className=\"flex gap-8 noti-header justify-center items-center p-5\">\n      <Link to=\"/profile\" className=\"absolute left-[20px]\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n        >\n          <path\n            d=\"M7.828 11H20V13H7.828L13.192 18.364L11.778 19.778L4 12L11.778 4.22198L13.192 5.63598L7.828 11Z\"\n            fill=\"white\"\n          />\n        </svg>\n      </Link>\n\n      {categories.map((category: any) => (\n        <div\n          key={category.id}\n          style={{ cursor: \"pointer\" }}\n          className={selectedCategory === category.id ? \"act\" : \"\"}\n          onClick={() => onCategoryClick(category.id)}\n        >\n          {category.name}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Header;\n","const Sidebar = ({ notices, onNoticeClick, selectedNotice }: any) => {\n  return (\n    <div className=\"sidebar bg-[#242427] rounded-r-lg pb-10 p-1\">\n      {notices.map((notice: any) => (\n        <button\n          key={notice.id}\n          className={`sidebar-button ${\n            selectedNotice === notice.id ? \"active\" : \"\"\n          }`}\n          onClick={() => onNoticeClick(notice.id)}\n        >\n          {notice.title}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import \"../../../../utils/polyfills\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { showToast } from \"../../error/ErrorSlice\";\nimport { useDispatch } from \"react-redux\";\n// import { setActiveNav, setActivePointTab } from \"../../../../pages/home/slice/HomeSlice\";\nimport Markdown from 'react-markdown'\n// import remarkGfm from 'remark-gfm'\nimport {\n  setActiveNav,\n  setActivePointTab,\n} from \"../../../../pages/home/slice/HomeSlice\";\nimport { setAuthModel, setPointMall } from \"../../../../features/login/ModelSlice\";\n\nconst Content = ({ notice }: any) => {\n  const isLoggedIn = localStorage.getItem(\"authToken\");\n  const parsedLoggedIn = isLoggedIn ? JSON.parse(isLoggedIn) : null;\n  const token = parsedLoggedIn?.data?.access_token;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [pageType, setPageType] = useState(false);\n\n  const type = notice?.extend?.page_type;\n\n  const handleLoginClick = () => {\n    if (!token) {\n      dispatch(setAuthModel(true)); // Open the login modal if not logged in\n    }\n  };\n\n  useEffect(() => {\n    if (type === \"internal\") {\n      setPageType(true);\n    } else {\n      setPageType(false); // Reset if type changes\n    }\n  }, [type]);\n\n  if (!notice) {\n    return null;\n  }\n\n  const JumpAction = (notice: any) => {\n    console.log(notice?.extend);\n\n    switch (notice?.extend.page_path) {\n      case \"rankings\":\n        dispatch(setActiveNav(3));\n        setTimeout(() => {\n          navigate(\"/explorer\");\n        }, 300);\n        break;\n      case \"points_mall\":\n        if (!token) {\n          dispatch(setAuthModel(true));\n        } else {\n          dispatch(setPointMall(\"/notifications\"))\n          navigate(\"/point_mall\");\n        }\n        break;\n      case \"points_lottery\":\n        if (!token) {\n          dispatch(setAuthModel(true));\n        } else {\n          navigate(\"/game\");\n        }\n        break;\n      case \"daily_task\":\n        if (!token) {\n          dispatch(setAuthModel(true));\n          return;\n        }\n        dispatch(setActivePointTab(2));\n        setTimeout(() => {\n          navigate(\"/point_info_redeem\");\n        }, 300);\n        break;\n      case \"invite_home\":\n        navigate(\"/share\");\n        break;\n      default:\n        dispatch(\n          showToast({\n            // message: \"IOS积分系统正在开发中！敬请期待～\",\n            message: ` ${notice.extend.page_name} 正在开发中！敬请期待~`,\n            type: \"error\",\n          })\n        );\n        break;\n    }\n  };\n\n  return (\n    <div className=\"content p-3\">\n      <div className=\"text-card\">\n        <h3>{notice.title}</h3>\n        <span className=\"mt-3\" style={{\n          fontFamily: 'PingFang SC',\n          fontWeight: 500,\n          fontSize: '12px',\n          lineHeight: '100%',\n        }}>\n          <Markdown>{notice.content}</Markdown>\n        </span>\n        {/* {pageType ? (\n          <>\n            {notice.extend.parameters?.video_id && (\n              <button\n                onClick={() =>\n                  navigate(`/player/${notice.extend.parameters?.video_id}`)\n                }\n                className=\"noti-btn mt-6\"\n              >\n                {notice.extend.page_name}\n              </button>\n            )}\n            {notice.extend.parameters?.topic_id && (\n              <button\n                onClick={() =>\n                  navigate(`/explorer/${notice.extend.parameters?.topic_id}`)\n                }\n                className=\"noti-btn mt-6\"\n              >\n                {notice.extend.page_name}\n              </button>\n            )}\n            {!notice.extend.parameters?.topic_id &&\n              !notice.extend.parameters?.video_id && (\n                <button\n                  onClick={() => JumpAction(notice)}\n                  className=\"noti-btn mt-6\"\n                >\n                  {notice.extend.page_name}\n                </button>\n              )}\n          </>\n        ) : (\n          notice.extend.page_name && (\n            <button\n              className=\"noti-btn mt-6\"\n              onClick={() => JumpAction(notice)}\n            >\n              {notice.extend.page_name}\n            </button>\n          )\n        )} */}\n        {pageType ? (\n          <button className=\"noti-btn mt-6\" onClick={() => JumpAction(notice)}>\n            {notice.extend.page_name}\n          </button>\n        ) : (\n          <>\n            {notice?.extend.page_name ? (\n              <a\n                target=\"_blink\"\n                href={notice?.extend?.page_path}\n                className=\"noti-btn mt-6\"\n                // onClick={() => JumpAction(notice)}\n              >\n                {notice.extend.page_name ? notice.extend.page_name : \"\"}\n              </a>\n            ) : (\n              \"\"\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Content;\n","import { useEffect, useState } from \"react\";\nimport Header from \"./components/notifications/Header\";\nimport Sidebar from \"./components/notifications/Sidebar\";\nimport Content from \"./components/notifications/Content\";\nimport \"./profile.css\";\n// import { useGetAdsQuery } from \"../search/services/searchApi\";\nimport Ads from \"../search/components/Ads\";\nimport Loader from \"../search/components/Loader\";\nimport NewAds from \"../../components/NewAds\";\nimport { useGetAdsQuery, useGetNotificationQuery } from \"../../services/helperService\";\n\nconst Notifications = () => {\n  const { data, isLoading, isFetching } = useGetNotificationQuery(); // Fetch data from API\n  const {\n    data: ads,\n    isFetching: isFetched,\n    isLoading: isLoaded,\n  } = useGetAdsQuery();\n  const [selectedCategory, setSelectedCategory] = useState<number | null>(null); // To track the selected category\n  const [selectedNotice, setSelectedNotice] = useState<number | null>(null); // To track the selected notice\n\n  useEffect(() => {\n    if (data && data.data.length > 0) {\n      const firstCategory = data.data[0];\n      setSelectedCategory(firstCategory.id); // Set the first category as selected\n      if (firstCategory.notices.length > 0) {\n        setSelectedNotice(firstCategory.notices[0].id); // Set the first notice of the first category as selected\n      }\n    }\n  }, [data]);\n\n  if (isLoading || isFetching)\n    return (\n      <div className=\"flex justify-center items-center h-screen bg-[#161619]\">\n        <Loader />\n      </div>\n    );\n\n  const advert = ads?.data?.notice_up?.data;\n\n  const categories = data?.data || []; // Safely get categories\n\n  const handleCategoryClick = (categoryId: number) => {\n    setSelectedCategory(categoryId);\n    const selectedCategoryData = categories.find(\n      (cat: any) => cat.id === categoryId\n    );\n    if (selectedCategoryData?.notices.length > 0) {\n      setSelectedNotice(selectedCategoryData.notices[0].id); // Automatically select the first notice when switching categories\n    }\n  };\n\n  const handleNoticeClick = (noticeId: number) => {\n    setSelectedNotice(noticeId);\n  };\n\n  const selectedCategoryData = categories.find(\n    (cat: any) => cat.id === selectedCategory\n  );\n  const notices = selectedCategoryData?.notices || [];\n\n  return (\n    <>\n      <div className=\"fixed-bg\"></div>\n      <div className=\"bg-[#161619] text-white\">\n        {/* Header */}\n        <Header\n          categories={categories}\n          onCategoryClick={handleCategoryClick}\n          selectedCategory={selectedCategory}\n        />\n\n        <div className=\"border-b-[1px] border-[#242426] mb-5\"></div>\n\n        {/* Ads */}\n        {/* <Ads advert={advert} /> */}\n        <NewAds section=\"notice_up\" />\n\n        {/* Sidebar and Content */}\n        <div className=\"grid grid-cols-3 gap-2 mt-10 h-full pb-[100px]\">\n          <div className=\"col-span-1\">\n            <Sidebar\n              notices={notices}\n              onNoticeClick={handleNoticeClick}\n              selectedNotice={selectedNotice}\n            />\n          </div>\n          <div className=\"col-span-2\">\n            {selectedNotice && (\n              <Content\n                notice={notices.find(\n                  (notice: any) => notice.id === selectedNotice\n                )}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Notifications;\n"],"names":["_ref","categories","onCategoryClick","selectedCategory","_jsxs","className","children","_jsx","Link","to","xmlns","width","height","viewBox","fill","d","map","category","style","cursor","id","onClick","name","notices","onNoticeClick","selectedNotice","notice","title","_parsedLoggedIn$data","_notice$extend","_notice$extend2","isLoggedIn","localStorage","getItem","parsedLoggedIn","JSON","parse","token","data","access_token","dispatch","useDispatch","navigate","useNavigate","pageType","setPageType","useState","type","extend","page_type","useEffect","fontFamily","fontWeight","fontSize","lineHeight","Markdown","content","page_path","setActiveNav","setTimeout","setPointMall","setAuthModel","setActivePointTab","showToast","message","page_name","JumpAction","_Fragment","target","href","Notifications","_ads$data","_ads$data$notice_up","isLoading","isFetching","useGetNotificationQuery","ads","isFetched","isLoaded","useGetAdsQuery","setSelectedCategory","setSelectedNotice","length","firstCategory","Loader","notice_up","selectedCategoryData","find","cat","Header","categoryId","NewAds","section","Sidebar","noticeId","Content"],"sourceRoot":""}