{"version":3,"file":"static/js/700.cf01eddc.chunk.js","mappings":"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","sources":["pages/profile/Bind.tsx"],"sourcesContent":["import \"./profile.css\";\nimport { Link, useNavigate } from \"react-router-dom\"; // Add useNavigate for navigation\nimport {\n  useLazyGetSocialQuery,\n  useLazySocialCallbackQuery,\n} from \"./services/profileApi\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { showToast } from \"./error/ErrorSlice\";\nimport Loader from \"../search/components/Loader\";\n\nconst Bind = () => {\n  const [triggerGetSocial, { isLoading }] = useLazyGetSocialQuery(); // RTK lazy query for sending code\n  const [triggerCallback] = useLazySocialCallbackQuery();\n  const navigate = useNavigate(); // React Router's navigation function\n  const dispatch = useDispatch();\n\n  const handleBind = async (type: string, action: string) => {\n    try {\n      const getSocialResponse = await triggerGetSocial({\n        type: type,\n        action: action,\n      }).unwrap();\n\n      const { url } = getSocialResponse?.data;\n\n      if (url) {\n        // Redirect the user to the returned URL (deep link or external)\n        window.location.href = url;\n      }\n    } catch (error) {\n      const errorMessage = (error as any)?.data?.msg || \"An error occurred\";\n      dispatch(showToast({ message: errorMessage, type: \"error\" }));\n    }\n  };\n\n  // This is where you handle the deep link and its parameters after redirection\n  useEffect(() => {\n    const handleDeepLink = async () => {\n      const currentUrl = window.location.href;\n\n      const params = new URLSearchParams(new URL(currentUrl).search);\n      // Only proceed if there are query parameters\n      if (Array.from(params).length === 0) return;\n\n      const type = params.get(\"type\");\n      const callbackStatus = params.get(\"callback_status\");\n      const message = decodeURIComponent(params.get(\"message\") || \"\");\n      const boundStatus = params.get(\"bound_status\");\n      const socialId = params.get(\"social_id\");\n\n      // Handle the parameters and navigate accordingly\n      if (callbackStatus === \"true\") {\n        if (boundStatus && boundStatus === \"bound\") {\n          dispatch(\n            showToast({\n              message: \"already bound\",\n              type: \"error\",\n            })\n          );\n        } else {\n          try {\n            const getSocialResponse = await triggerCallback({\n              type: type || \"\",\n              code: socialId || \"\",\n            }).unwrap();\n            console.log(\"Social response:\", getSocialResponse);\n          } catch (error) {\n            console.error(\"Error in social callback:\", error);\n            dispatch(\n              showToast({\n                message: \"Error handling social callback\",\n                type: \"error\",\n              })\n            );\n          }\n        }\n      } else {\n        dispatch(\n          showToast({\n            message: message || \"An error occurred\",\n            type: \"success\",\n          })\n        );\n      }\n    };\n\n    handleDeepLink();\n  }, [navigate]);\n\n  return (\n    <div className=\"relative\">\n      <div className=\"fixed-bg\"></div>\n      <div>\n        <div className=\"flex fixed top-0 w-full z-10 text-white bg-[#161619] justify-between items-center p-2\">\n          <Link to=\"/info\" className=\"back-button\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n            >\n              <path\n                d=\"M7.828 11H20V13H7.828L13.192 18.364L11.778 19.778L4 12L11.778 4.22198L13.192 5.63598L7.828 11Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </Link>\n          <div className=\"history-title pr-10\">绑定账号</div>\n          <div className=\"edit-title\"></div>\n        </div>\n        <div className=\"mt-[60px] p-4\">\n          <div>\n            <button\n              className=\"bind_div w-full\"\n              onClick={() => handleBind(\"wx\", \"bind\")}\n            >\n              <h1>微信登录</h1>\n              <div className=\"flex items-center gap-2\">\n                <span>暂未绑定</span>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"6\"\n                  height=\"8\"\n                  viewBox=\"0 0 6 8\"\n                  fill=\"none\"\n                >\n                  <path\n                    d=\"M0.778157 0.156564C0.836612 0.106935 0.906056 0.0675604 0.982509 0.0406946C1.05896 0.0138289 1.14092 0 1.2237 0C1.30647 0 1.38843 0.0138289 1.46488 0.0406946C1.54134 0.0675604 1.61078 0.106935 1.66924 0.156564L5.85277 3.69938C5.89944 3.73882 5.93647 3.78567 5.96173 3.83724C5.987 3.88882 6 3.94411 6 3.99994C6 4.05578 5.987 4.11107 5.96173 4.16264C5.93647 4.21422 5.89944 4.26107 5.85277 4.30051L1.66924 7.84332C1.42255 8.05223 1.02484 8.05223 0.778157 7.84332C0.531474 7.63442 0.531474 7.29762 0.778157 7.08872L4.42302 3.99781L0.773123 0.906907C0.531475 0.702268 0.531474 0.361203 0.778157 0.156564Z\"\n                    fill=\"white\"\n                  />\n                </svg>\n              </div>\n            </button>\n            <button\n              className=\"bind_div mt-3 w-full\"\n              onClick={() => handleBind(\"qq\", \"bind\")}\n            >\n              <h1>QQ登录</h1>\n              <div className=\"flex items-center gap-2\">\n                <span>暂未绑定</span>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"6\"\n                  height=\"8\"\n                  viewBox=\"0 0 6 8\"\n                  fill=\"none\"\n                >\n                  <path\n                    d=\"M0.778157 0.156564C0.836612 0.106935 0.906056 0.0675604 0.982509 0.0406946C1.05896 0.0138289 1.14092 0 1.2237 0C1.30647 0 1.38843 0.0138289 1.46488 0.0406946C1.54134 0.0675604 1.61078 0.106935 1.66924 0.156564L5.85277 3.69938C5.89944 3.73882 5.93647 3.78567 5.96173 3.83724C5.987 3.88882 6 3.94411 6 3.99994C6 4.05578 5.987 4.11107 5.96173 4.16264C5.93647 4.21422 5.89944 4.26107 5.85277 4.30051L1.66924 7.84332C1.42255 8.05223 1.02484 8.05223 0.778157 7.84332C0.531474 7.63442 0.531474 7.29762 0.778157 7.08872L4.42302 3.99781L0.773123 0.906907C0.531475 0.702268 0.531474 0.361203 0.778157 0.156564Z\"\n                    fill=\"white\"\n                  />\n                </svg>\n              </div>\n            </button>\n            <button\n              className=\"bind_div mt-3 w-full\"\n              onClick={() => handleBind(\"sina\", \"bind\")}\n            >\n              <h1>微博登录</h1>\n              <div className=\"flex items-center gap-2\">\n                <span>暂未绑定</span>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"6\"\n                  height=\"8\"\n                  viewBox=\"0 0 6 8\"\n                  fill=\"none\"\n                >\n                  <path\n                    d=\"M0.778157 0.156564C0.836612 0.106935 0.906056 0.0675604 0.982509 0.0406946C1.05896 0.0138289 1.14092 0 1.2237 0C1.30647 0 1.38843 0.0138289 1.46488 0.0406946C1.54134 0.0675604 1.61078 0.106935 1.66924 0.156564L5.85277 3.69938C5.89944 3.73882 5.93647 3.78567 5.96173 3.83724C5.987 3.88882 6 3.94411 6 3.99994C6 4.05578 5.987 4.11107 5.96173 4.16264C5.93647 4.21422 5.89944 4.26107 5.85277 4.30051L1.66924 7.84332C1.42255 8.05223 1.02484 8.05223 0.778157 7.84332C0.531474 7.63442 0.531474 7.29762 0.778157 7.08872L4.42302 3.99781L0.773123 0.906907C0.531475 0.702268 0.531474 0.361203 0.778157 0.156564Z\"\n                    fill=\"white\"\n                  />\n                </svg>\n              </div>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {isLoading && (\n        <div className=\"fixed inset-0 flex justify-center items-center\">\n          <Loader />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Bind;\n"],"names":["Bind","triggerGetSocial","isLoading","useLazyGetSocialQuery","triggerCallback","useLazySocialCallbackQuery","navigate","useNavigate","dispatch","useDispatch","handleBind","async","type","action","getSocialResponse","unwrap","url","data","window","location","href","error","_data","errorMessage","msg","showToast","message","useEffect","currentUrl","params","URLSearchParams","URL","search","Array","from","length","get","callbackStatus","decodeURIComponent","boundStatus","socialId","code","handleDeepLink","_jsxs","className","children","_jsx","Link","to","xmlns","width","height","viewBox","fill","d","onClick","Loader"],"sourceRoot":""}