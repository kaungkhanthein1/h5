{"version":3,"file":"static/js/361.53aa77fd.chunk.js","mappings":"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","sources":["components/home/LazyLoadImage.jsx","components/home/MovieCard.jsx","assets/back.svg","pages/explorer/Detail.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport cardSkeleton from \"../../assets/blur.png\"; // Placeholder image\nconst LazyLoadImage = ({ src, alt, width, height, className, ...props }) => {\n  const imgRef = useRef(null);\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            if (imgRef.current) {\n              imgRef.current.src = src;\n              imgRef.current.onload = () => {\n                if (imgRef.current && imgRef.current !== null) {\n                  imgRef.current.style.opacity = \"1\";\n                  setLoaded(true);\n                }\n              };\n            }\n            observer.disconnect();\n          }\n        });\n      },\n      {\n        rootMargin: \"100px\",\n        threshold: 0.1,\n      }\n    );\n    if (imgRef.current) {\n      observer.observe(imgRef.current);\n    }\n    return () => {\n      if (imgRef.current) {\n        observer.unobserve(imgRef.current);\n      }\n    };\n  }, [src]);\n  return (\n    <div className={`image-container2 ${className}`} style={{ width, height }}>\n      <img\n        ref={imgRef}\n        src={cardSkeleton}\n        alt={alt}\n        width={width}\n        height={height}\n        className={`${className} ${\n          loaded ? \"image-loaded\" : \"image-placeholder\"\n        }`}\n        {...props}\n      />\n    </div>\n  );\n};\nexport default LazyLoadImage;\n","import { Link } from \"react-router-dom\";\nimport he from \"he\";\nimport cardSkeleton from \"../../assets/imgLoading.png\"; // Placeholder image\n// import videoIcon from \"../../assets/videoIcon.svg\";\nimport LazyLoadImage from \"./LazyLoadImage\";\n\nconst MovieCard = ({\n  movie,\n  height,\n  width = \"114px\",\n  showDynamic = false,\n  isSlider = false,\n}) => {\n  return (\n    <div className=\"movie-item max-sm:h-auto cursor-default relative mt-2\">\n      <Link\n        className={`block relative zoom-effect ${isSlider ? \"w-[105px]\" : \"\"}`}\n        to={`/player/${movie?.id}`}\n      >\n        <div className={`img_a relative  w-full border-none`}>\n          {movie?.cover?.length > 0 ? (\n            <img\n              src={movie.cover?.length ? movie?.cover : cardSkeleton}\n              alt={movie.name}\n              className={`movie_img rounded-[4px] border-none  cursor-default object-cover w-full`}\n            />\n          ) : (\n            <LazyLoadImage\n              src={movie.cover}\n              alt={movie.name}\n              className={`movie_img rounded-[4px] border-none  cursor-default object-cover w-full`}\n            />\n          )}\n\n          {/* <img\n            src={movie.cover?.length ? movie?.cover : cardSkeleton}\n            alt={movie.name}\n            className={`movie_img rounded-[4px] border-none  cursor-default object-cover w-full`}\n          /> */}\n          <div className=\"absolute rounded-[4px]  h-full w-full inset-0 bg-gradient-to-b from-transparent via-black/5 to-black\"></div>\n          <div className=\"flex absolute text-[12px] justify-between items-center px-3 bottom-2 w-full\">\n            <p className=\"flex-1 truncate text-white\">{movie?.dynamic}</p>\n            {movie?.type_name && (\n              <p className=\"flex-1 flex justify-end text-white\">\n                {movie?.type_name}\n              </p>\n            )}\n          </div>\n        </div>\n\n        <div className=\"overlay\">\n          {/* <img className=\"h-[40px]\" src={videoIcon} alt=\"\" /> */}\n        </div>\n        {movie?.label?.length ? (\n          <div className=\"absolute top-0 right-0 search_card_score z-10\">\n            <p className=\"truncate text-center\">{movie?.label}</p>\n          </div>\n        ) : (\n          <></>\n        )}\n        {/* <div className=\"top-0 right-0 search_card_score truncate z-1 absolute w-[40px] flex justify-center items-center\">\n          <span>{movie?.label}</span>\n        </div> */}\n      </Link>\n\n      <div className=\"text-container\">\n        <div className=\"movie-info\">\n          <h2\n            //text-[12px] reomove\n            className={`text-[14px] ${\n              isSlider ? \"w-[105px]\" : \"\"\n            } mt-[7px] leading-[18px] font-confortFont font-[400] text-white truncate`}\n          >\n            {he.decode(movie?.name || \"Unknown Title\")}\n          </h2>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCard;\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgBack(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.828 6.99998H16V8.99998H3.828L9.192 14.364L7.778 15.778L0 7.99998L7.778 0.221985L9.192 1.63598L3.828 6.99998Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBack);\nexport default __webpack_public_path__ + \"static/media/back.ae3b62b6ece6dcf0b43efb8f347050a2.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useState } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport MovieCard from \"../../components/home/MovieCard\";\nimport backArrow from \"../../assets/back.svg\";\nimport Loader from \"../search/components/Loader\";\nimport NewAds from \"../../components/NewAds\";\nimport { convertToSecureUrl } from \"../../services/newEncryption\";\n\nconst Detail = () => {\n  const [details, setDetails] = useState<any>({});\n  const [isLoading, setIsLoading] = useState(false);\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const settings = JSON.parse(localStorage.getItem(\"movieAppSettings\") || \"{}\");\n\n  // Set the X-Client-Setting header dynamically\n  const headers = {\n    \"X-Client-Setting\": JSON.stringify({\n      \"pure-mode\": settings.filterToggle ? 1 : 0,\n    }),\n  };\n\n  const getDetails = async () => {\n    setIsLoading(true);\n    const res = await fetch(\n      convertToSecureUrl(`${process.env.REACT_APP_API_URL}/movie/topic/${id}`),\n      { headers }\n    );\n    const data = await res.json();\n    setDetails(data?.data);\n    setIsLoading(false);\n  };\n  useEffect(() => {\n    getDetails();\n  }, []);\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"flex justify-center items-center min-h-screen bg-background\">\n          <Loader />\n        </div>\n      ) : (\n        <div className=\"bg-background text-white pb-32 pt-14\">\n          <div className=\"relative\">\n            <img\n              src={details?.cover}\n              alt=\"\"\n              className=\"w-full h-auto object-cover\"\n            />\n            <div className=\" bg-gradient-to-t from-black via-black/5 to-transparent absolute  bottom-0 py-1 w-full\">\n              <p className=\"text-[16px] font-semibold px-2\">{details?.name}</p>\n            </div>\n            <div className=\"absolute top-4 left-4\">\n              <img\n                onClick={() => navigate(-1)}\n                src={backArrow}\n                alt=\"\"\n                className=\"cursor-pointer\"\n              />\n            </div>\n          </div>\n          <p className=\"px-3 text-[12px] text-[#aaa] my-3\">\n            {details?.description}\n          </p>\n          <NewAds section=\"topic_movies_top\" />\n          <p className=\"px-3 text-[12px] mt-2 mb-3\">\n            Include {details?.movies?.length} Films\n          </p>\n          <div className=\"grid grid-cols-3 sm:grid-cols-5 md:grid-cols-6 lg:gird-cols-8 gap-3 px-3\">\n            {details?.movies?.map((movie: any) => (\n              <Link\n                key={movie}\n                to={`/player/${movie.id}`}\n                className=\"mx-auto w-full\"\n              >\n                <MovieCard movie={movie} height={\"\"} />\n              </Link>\n            ))}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Detail;\n"],"names":["_ref","src","alt","width","height","className","props","imgRef","useRef","loaded","setLoaded","useState","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","current","onload","style","opacity","disconnect","rootMargin","threshold","observe","unobserve","_jsx","children","ref","cardSkeleton","_movie$cover","_movie$cover2","_movie$label","movie","showDynamic","isSlider","_jsxs","Link","to","id","cover","length","name","LazyLoadImage","dynamic","type_name","label","_Fragment","he","Detail","_details$movies","_details$movies2","details","setDetails","isLoading","setIsLoading","useParams","navigate","useNavigate","settings","JSON","parse","localStorage","getItem","headers","stringify","filterToggle","async","res","fetch","convertToSecureUrl","data","json","getDetails","Loader","onClick","backArrow","description","NewAds","section","movies","map","MovieCard"],"sourceRoot":""}