{"version":3,"file":"static/js/203.f0d06628.chunk.js","mappings":"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","sources":["components/home/LazyLoadImage.jsx","components/home/MovieCard.jsx","assets/rightvg.svg","components/home/Movies.jsx","components/home/Banner.tsx","components/home/ContinueWatching.tsx","components/home/FilteredByType.tsx","components/home/HomeAds.tsx","pages/home/index.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport cardSkeleton from \"../../assets/blur.png\"; // Placeholder image\nconst LazyLoadImage = ({ src, alt, width, height, className, ...props }) => {\n  const imgRef = useRef(null);\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            if (imgRef.current) {\n              imgRef.current.src = src;\n              imgRef.current.onload = () => {\n                if (imgRef.current && imgRef.current !== null) {\n                  imgRef.current.style.opacity = \"1\";\n                  setLoaded(true);\n                }\n              };\n            }\n            observer.disconnect();\n          }\n        });\n      },\n      {\n        rootMargin: \"100px\",\n        threshold: 0.1,\n      }\n    );\n    if (imgRef.current) {\n      observer.observe(imgRef.current);\n    }\n    return () => {\n      if (imgRef.current) {\n        observer.unobserve(imgRef.current);\n      }\n    };\n  }, [src]);\n  return (\n    <div className={`image-container2 ${className}`} style={{ width, height }}>\n      <img\n        ref={imgRef}\n        src={cardSkeleton}\n        alt={alt}\n        width={width}\n        height={height}\n        className={`${className} ${\n          loaded ? \"image-loaded\" : \"image-placeholder\"\n        }`}\n        {...props}\n      />\n    </div>\n  );\n};\nexport default LazyLoadImage;\n","import { Link } from \"react-router-dom\";\nimport he from \"he\";\nimport cardSkeleton from \"../../assets/imgLoading.png\"; // Placeholder image\n// import videoIcon from \"../../assets/videoIcon.svg\";\nimport LazyLoadImage from \"./LazyLoadImage\";\n\nconst MovieCard = ({\n  movie,\n  height,\n  width = \"114px\",\n  showDynamic = false,\n  isSlider = false,\n}) => {\n  return (\n    <div className=\"movie-item max-sm:h-auto cursor-default relative mt-2\">\n      <Link\n        className={`block relative zoom-effect ${isSlider ? \"w-[105px]\" : \"\"}`}\n        to={`/player/${movie?.id}`}\n      >\n        <div className={`img_a relative  w-full border-none`}>\n          {movie?.cover?.length > 0 ? (\n            <img\n              src={movie.cover?.length ? movie?.cover : cardSkeleton}\n              alt={movie.name}\n              className={`movie_img rounded-[4px] border-none  cursor-default object-cover w-full`}\n            />\n          ) : (\n            <LazyLoadImage\n              src={movie.cover}\n              alt={movie.name}\n              className={`movie_img rounded-[4px] border-none  cursor-default object-cover w-full`}\n            />\n          )}\n\n          {/* <img\n            src={movie.cover?.length ? movie?.cover : cardSkeleton}\n            alt={movie.name}\n            className={`movie_img rounded-[4px] border-none  cursor-default object-cover w-full`}\n          /> */}\n          <div className=\"absolute rounded-[4px]  h-full w-full inset-0 bg-gradient-to-b from-transparent via-black/5 to-black\"></div>\n          <div className=\"flex absolute text-[12px] justify-between items-center px-3 bottom-2 w-full\">\n            <p className=\"flex-1 truncate text-white\">{movie?.dynamic}</p>\n            {movie?.type_name && (\n              <p className=\"flex-1 flex justify-end text-white\">\n                {movie?.type_name}\n              </p>\n            )}\n          </div>\n        </div>\n\n        <div className=\"overlay\">\n          {/* <img className=\"h-[40px]\" src={videoIcon} alt=\"\" /> */}\n        </div>\n        {movie?.label?.length ? (\n          <div className=\"absolute top-0 right-0 search_card_score z-10\">\n            <p className=\"truncate text-center\">{movie?.label}</p>\n          </div>\n        ) : (\n          <></>\n        )}\n        {/* <div className=\"top-0 right-0 search_card_score truncate z-1 absolute w-[40px] flex justify-center items-center\">\n          <span>{movie?.label}</span>\n        </div> */}\n      </Link>\n\n      <div className=\"text-container\">\n        <div className=\"movie-info\">\n          <h2\n            //text-[12px] reomove\n            className={`text-[14px] ${\n              isSlider ? \"w-[105px]\" : \"\"\n            } mt-[7px] leading-[18px] font-confortFont font-[400] text-white truncate`}\n          >\n            {he.decode(movie?.name || \"Unknown Title\")}\n          </h2>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCard;\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgRightvg(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 7,\n    height: 12,\n    viewBox: \"0 0 7 12\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.47668 6.00011L0.351685 1.87511L1.53002 0.696777L6.83335 6.00011L1.53002 11.3034L0.351685 10.1251L4.47668 6.00011Z\",\n    fill: \"white\",\n    fillOpacity: 0.4\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgRightvg);\nexport default __webpack_public_path__ + \"static/media/rightvg.a35e4cdcc722a946ded3ee7421391114.svg\";\nexport { ForwardRef as ReactComponent };","/* eslint-disable no-unused-vars */\nimport React from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { Navigation } from \"swiper/modules\";\nimport \"swiper/css\";\nimport MovieCard from \"./MovieCard\";\n\nimport rightvg from \"../../assets/rightvg.svg\";\nimport { setActiveTab } from \"src/pages/home/slice/HomeSlice\";\nimport { useDispatch } from \"react-redux\";\n\nconst Movies = ({ movieData }) => {\n  const apiMovie = movieData?.list;\n  const dispatch = useDispatch();\n\n  if (apiMovie?.length === 0) {\n    return (\n      <div className=\"px-10 max-md:px-3 max-md:mt-[30px] mt-[100px]\">\n        <div className=\"flex justify-center items-center pt-[120px]\">\n          <img\n            src=\"\"\n            width={300}\n            height={300}\n            className=\"max-sm:w-[150px] max-sm:h-[150px]\"\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    // <div className=\"px-10 max-md:px-3\">\n    //   <div className=\"flex justify-between items-center\">\n    //     <h1 className=\"text-sm uppercase text-white font-semibold flex items-center\">\n    //       <span className=\"text-white font-headerFont\">{movieData?.title}</span>\n    //     </h1>\n    //     <h1 className=\"\">{movieData?.navigator?.title}</h1>\n    //     <img src={rightvg} alt=\"\" />\n    //   </div>\n    //   <div className=\"max-md:mt-3 mt-3\">\n    //     <div className=\"flex overflow-x-scroll whitespace-nowrap scrollbar-hide gap-2 mt-0\">\n    //       {apiMovie?.map((movie) => (\n    //         <div key={movie.id}>\n    //           <MovieCard movie={movie} height={\"200px\"} isSlider={true} />\n    //         </div>\n    //       ))}\n    //     </div>\n    //   </div>\n    // </div>\n    <div className=\"text-text max-md:px-3 px-10\">\n      <div className=\"\">\n        <div className=\"flex justify-between items-center px-3 text-[16px] mb-3\">\n          <h1 className=\"uppercase text-white font-semibold flex items-center\">\n            <span className=\"text-white text-[16px] font-headerFont\">\n              {movieData?.title}\n            </span>\n          </h1>\n          {movieData?.right?.text?.length ? (\n            <div\n              className=\"flex items-center gap-1\"\n              onClick={() =>\n                dispatch(setActiveTab(movieData?.right?.data?.index))\n              }\n            >\n              <h1 className=\"text-[14px] text-gray-500\">\n                {movieData?.right?.text}\n              </h1>\n              <img src={rightvg} alt=\"\" />\n            </div>\n          ) : (\n            <></>\n          )}\n        </div>\n        <div className=\"grid grid-cols-3 sm:grid-cols-4 md:grid-cols-6 pl-3 lg:grid-cols-8 gap-y-5 gap-2 mt-0 pt-1 pb-2 px-3\">\n          {apiMovie?.map((movie) => (\n            <div key={movie?.id} className=\"mx-auto w-full\">\n              <MovieCard movie={movie} height={\"200px\"} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;\n","import \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from \"react-responsive-carousel\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nconst Banner = ({ list }: { list: any }) => {\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const handleOnChange = (index: any) => {\n    setSelectedIndex(index);\n  };\n  const navigate = useNavigate();\n\n  const handleBannerClick = (clickLink: string) => {\n    // console.log(\"clickLink is=>\", clickLink);\n    if (clickLink && clickLink.startsWith(\"http\")) {\n      // Create and click an anchor element for external links\n      const a = document.createElement('a');\n      a.href = clickLink;\n      a.target = \"_blank\";\n      a.rel = \"noopener noreferrer\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    } else {\n      navigate(`/player/${clickLink}`);\n      // Handle cases where clickLink is not a full URL or handle internal links\n      // console.log(\"Clicked on banner:\", clickLink);\n    }\n  };\n\n  return (\n    <div className=\"mt-[120px] max-md:px-3 px-10 pt-2\">\n      <div className=\"\">\n        <div className=\"relative block md:hidden\">\n          <Carousel\n            showThumbs={false}\n            showArrows={false}\n            showStatus={false}\n            autoPlay={true}\n            infiniteLoop={true}\n          >\n            {list?.map((banner: any) => (\n              <div\n                key={banner?.image}\n                className=\"h-[200px] lg:h-[400px] rounded-md\"\n                onClick={() => handleBannerClick(banner?.click)}\n              >\n                <img\n                  className=\"relative h-[200px] lg:h-[400px] object-cover rounded-md\"\n                  src={banner?.image}\n                  alt=\"\"\n                />\n                {banner?.type == 1 && (\n                  <>\n                    <p className=\"absolute text-white z-50 bottom-[30px] pl-3 text-[16px] font-semibold\">\n                      {banner?.title ? banner?.title : \"未知标题\"}\n                    </p>\n                    <div className=\"absolute bottom-[10px] left-3 flex items-center gap-2\">\n                      <div className=\"home-label z-[999]\">\n                        {banner?.label ? banner?.label : \"热播\"}\n                      </div>\n                      <div className=\"z-[999] home-sub-title\">\n                        {banner?.sub_title ? banner?.sub_title : \"剧情 / 古装\"}\n                      </div>\n                    </div>\n                  </>\n                )}\n                <div className=\"absolute rounded-b-md  h-full w-full inset-0 bg-gradient-to-b from-transparent via-black/5 to-black\"></div>\n              </div>\n            ))}\n          </Carousel>\n        </div>\n        <div className=\"relative hidden md:block\">\n          <Carousel\n            showThumbs={false}\n            showArrows={false}\n            showStatus={false}\n            showIndicators={false}\n            autoPlay={true}\n            infiniteLoop={true}\n            centerMode\n            centerSlidePercentage={60}\n            selectedItem={selectedIndex}\n            onChange={handleOnChange}\n          >\n            {list?.map((banner: any, index: any) => (\n              <div\n                key={banner?.image}\n                className={`${\n                  selectedIndex == index\n                    ? \"h-[200px] lg:h-[400px]\"\n                    : \"h-[180px] lg:h-[350px] mt-[10px] lg:mt-[20px]\"\n                } rounded-md relative mx-3`}\n                onClick={() => handleBannerClick(banner?.click)}\n              >\n                <img\n                  className={`relative ${\n                    selectedIndex == index\n                      ? \"h-[200px] lg:h-[400px]\"\n                      : \"h-[180px] lg:h-[350px]\"\n                  } object-cover rounded-md`}\n                  src={banner?.image}\n                  alt=\"\"\n                />\n                {banner?.type == 1 && (\n                  <>\n                    <p className=\"absolute text-white z-50 bottom-[30px] pl-3 text-[16px] font-semibold\">\n                      {banner?.title ? banner?.title : \"未知标题\"}\n                    </p>\n                    <div className=\"absolute bottom-[10px] left-3 flex items-center gap-2\">\n                      <div className=\"home-label z-[999]\">\n                        {banner?.label ? banner?.label : \"热播\"}\n                      </div>\n                      <div className=\"z-[999] home-sub-title\">\n                        {banner?.sub_title ? banner?.sub_title : \"剧情 / 古装\"}\n                      </div>\n                    </div>\n                  </>\n                )}\n                <div className=\"absolute rounded-b-md  h-full w-full inset-0 bg-gradient-to-b from-transparent via-black/5 to-black\"></div>\n              </div>\n            ))}\n          </Carousel>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Banner;\n","import { Link, useNavigate } from \"react-router-dom\";\nimport ImageWithPlaceholder from \"../../pages/search/components/ImgPlaceholder\";\nimport { useGetRecordQuery } from \"../../pages/profile/services/profileApi\";\nimport \"./home.css\";\nimport { useDispatch } from \"react-redux\";\n\nconst ContinueWatching = () => {\n  const isLoggedIn = localStorage.getItem(\"authToken\");\n  const parsedLoggedIn = isLoggedIn ? JSON.parse(isLoggedIn) : null;\n  const navigate = useNavigate();\n  const token = parsedLoggedIn?.data?.access_token;\n  const { data } = useGetRecordQuery(undefined, { skip: !token }); // Fetch favorite movies list from API\n\n  const movies = data?.data;\n  const moviesData = data?.data; // Assuming `data` is the fetched data containing your movie information\n\n  // Extract all movies from the 'list' array in each 'data' object and flatten into a single array\n  const allMovies = moviesData\n    ?.map((section: any) => section.list) // Get the 'list' array from each section\n    ?.flat(); // Flatten the arrays into a single array\n\n  // Sort the movies by 'update_time' in descending order and take the latest 10 movies\n  const latestMovies = allMovies\n    ?.sort((a: any, b: any) => b.update_time - a.update_time) // Sort by update_time (newest first)\n    ?.slice(0, 10); // Take the latest 10 movies\n\n  function formatDuration(durationInSeconds: any) {\n    const hours = Math.floor(durationInSeconds / 3600);\n    const minutes = Math.floor((durationInSeconds % 3600) / 60);\n    const seconds = Math.floor(durationInSeconds % 60);\n\n    // Add leading zeros if hours, minutes, or seconds are less than 10\n    const formattedHours = hours < 10 ? `0${hours}` : hours;\n    const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;\n    const formattedSeconds = seconds < 10 ? `0${seconds}` : seconds;\n\n    const formattedDuration = `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n    return formattedDuration;\n  }\n\n  return (\n    <>\n      {/* Horizontal Scrolling Movie List */}\n      {token && movies?.length !== 0 && (\n        <div className=\"max-md:px-3 px-10\">\n          {latestMovies?.length > 0 && (\n            <div className=\" flex justify-between items-center\">\n              <h1 className=\"text-white font-headerFont\">继续观看</h1>\n              <svg\n                onClick={() => navigate(\"/history\")}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\"\n                height=\"24\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n              >\n                <g opacity=\"0.2\">\n                  <path\n                    d=\"M13.1722 12L8.22217 7.04999L9.63617 5.63599L16.0002 12L9.63617 18.364L8.22217 16.95L13.1722 12Z\"\n                    fill=\"white\"\n                  />\n                </g>\n              </svg>\n            </div>\n          )}\n          <div className=\"flex overflow-x-scroll whitespace-nowrap scrollbar-hide gap-4 mt-5\">\n            {latestMovies?.map((movie: any) => (\n              <Link\n                to={`/player/${movie?.movie_id}`}\n                key={movie.id}\n                className=\"w-[136px]\"\n              >\n                <div className=\"relative\">\n                  <ImageWithPlaceholder\n                    src={movie?.cover}\n                    alt={`Picture of ${movie?.movie_name}`}\n                    width={136}\n                    height={83}\n                    className=\"w-[136px] rounded-t-md h-[86px] object-cover object-center\"\n                  />\n                  <div className=\"absolute watchedDuration bottom-[2px] right-[3px] \">\n                    {formatDuration(movie?.current_time)}\n                  </div>\n                  <div className=\"absolute watchedDuration bottom-[2px] left-[3px] \">\n                    {movie?.episode_name}\n                  </div>\n                  <div className=\"absolute watchedDuration top-[2px] right-[3px] \">\n                    {movie?.dynamic}\n                  </div>\n                </div>\n\n                <div className=\"watchlist-item-progress\">\n                  <div\n                    className=\"progress-bar\"\n                    style={{\n                      width: `${\n                        movie?.duration\n                          ? (movie?.current_time / movie?.duration) * 100\n                          : 0\n                      }%`,\n                    }}\n                  ></div>\n                </div>\n                <div className=\"his-text mt-1 cus-elips\">\n                  {movie?.movie_name}\n                </div>\n              </Link>\n            ))}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ContinueWatching;\n","// import React, { useEffect, useRef, useState } from \"react\";\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n// import nodata from \"../../assets/nodata.png\";\n\n// import { useGetHeaderTopicsQuery } from \"../../services/helperService\";\n\n// import Movies from \"./Movies\";\n// import axios from \"axios\";\n// import MovieCard from \"./MovieCard\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import Loader from \"../../pages/search/components/Loader\";\n// import FilterByTag from \"./FilterByTag\";\n// import {\n//   setSort,\n//   setClass,\n//   setArea,\n//   setYear,\n//   setSortName,\n// } from \"../../pages/home/slice/HomeSlice\";\n// import NewAds from \"../NewAds\";\n// import { convertToSecureUrl } from \"../../services/newEncryption\";\n// import { useGetFilteredDataQuery } from \"../../pages/home/services/homeApi\";\n// import { setIsShowMenu } from \"../../features/counter/counterSlice\";\n\n// const FilteredByType = () => {\n//   const activeTab = useSelector((state: any) => state.home.activeTab);\n//   const [movieData, setMovieData] = useState<any>([]);\n//   const [totalData, setTotalData] = useState<any>(null);\n//   const [hasMore, setHasMore] = useState(true);\n//   const [pageSize, setPageSize] = useState(30);\n//   const [page, setPage] = useState(1);\n//   const [page2, setPage2] = useState(2);\n//   // const [isLoading, setIsLoading] = useState(false);\n//   const sort = useSelector((state: any) => state.home.sort);\n//   const sortName = useSelector((state: any) => state.home.sortName);\n//   const classData = useSelector((state: any) => state.home.class);\n//   const area = useSelector((state: any) => state.home.area);\n//   const year = useSelector((state: any) => state.home.year);\n//   const isShowMenu = useSelector((state: any) => state.counter.isShowMenu);\n\n//   const [nomoredata, setNomoredata] = useState(false);\n//   const dispatch = useDispatch();\n\n//   const { data, isFetching, isLoading } = useGetFilteredDataQuery({\n//     id: activeTab,\n//     sort,\n//     classData,\n//     area,\n//     year,\n//     page,\n//     pageSize,\n//   });\n//   useEffect(() => {\n//     if (data?.data?.list?.length) {\n//       setMovieData(data?.data?.list);\n//       setTotalData(data?.data?.total);\n//     }\n//   }, [data]);\n//   const settings = JSON.parse(localStorage.getItem(\"movieAppSettings\") || \"{}\");\n\n//   // Set the X-Client-Setting header dynamically\n//   const headers = {\n//     \"X-Client-Setting\": JSON.stringify({\n//       \"pure-mode\": settings.filterToggle ? 1 : 0,\n//     }),\n//   };\n\n//   const fetchData = async () => {\n//     setPage2((prev) => prev + 1);\n//     const { data } = await axios.get(\n//       convertToSecureUrl(\n//         `${process.env.REACT_APP_API_URL}/movie/screen/list?type_id=${activeTab}&&sort=${sort}&&class=${classData}&&area=${area}&&year=${year}&&pageSize=${pageSize}&&page=${page2}`\n//       ),\n//       { headers }\n//     );\n//     setMovieData((prev: any) => [...prev, ...data?.data?.list]);\n//   };\n\n//   useEffect(() => {\n//     window.scrollTo(0, 0);\n//     setPage(1);\n//     setPage2(2);\n//   }, [sort, area, year, classData]);\n\n//   useEffect(() => {\n//     if (totalData <= movieData?.length) {\n//       setHasMore(false);\n//     } else {\n//       setHasMore(true);\n//     }\n//   }, [totalData, movieData]);\n\n//   const prevTabRef = useRef(activeTab);\n\n//   // useEffect(() => {\n//   //   if (prevTabRef.current !== activeTab) {\n//   //     dispatch(setSort(\"by_default\"));\n//   //     dispatch(setSortName(\"综合\"));\n//   //     dispatch(setClass(\"类型\"));\n//   //     dispatch(setArea(\"地区\"));\n//   //     dispatch(setYear(\"年份\"));\n//   //     prevTabRef.current = activeTab;\n//   //   }\n//   // }, [activeTab]);\n\n//   return (\n//     <>\n//       <div className=\"home-bg\"></div>\n//       {isShowMenu ? (\n//         <div\n//           onClick={() => dispatch(setIsShowMenu(false))}\n//           className=\"bg-[#00000080] z-20 fixed top-0 left-0 w-full h-screen\"\n//         ></div>\n//       ) : (\n//         <></>\n//       )}\n//       <div className=\" mt-[100px] text-text min-h-screen\">\n//         <div className=\"\">\n//           <FilterByTag paddingTop=\"pt-5\" />\n//           <div className=\"mt-5\">\n//             <NewAds section=\"topic_movies_top\" />\n//           </div>\n//           {isFetching || isLoading ? (\n//             <div className=\"mt-10 flex justify-center items-center w-full\">\n//               <Loader />\n//             </div>\n//           ) : movieData?.length ? (\n//             <>\n//               <div className=\"grid grid-cols-3 sm:grid-cols-4 md:grid-cols-6 pl-3 lg:grid-cols-8 gap-y-5 gap-2 mt-0 pt-5 pb-20 px-3\">\n//                 {movieData?.map((movie: any) => (\n//                   <div key={movie?.id} className=\"mx-auto w-full\">\n//                     <MovieCard movie={movie} height={\"200px\"} />\n//                   </div>\n//                 ))}\n//               </div>\n//               <InfiniteScroll\n//                 dataLength={movieData.length}\n//                 next={fetchData}\n//                 hasMore={hasMore}\n//                 endMessage={\n//                   <div className=\"flex bg-background justify-center items-center w-full py-5\">\n//                     <p style={{ textAlign: \"center\" }}>\n//                       <b>快关注你喜欢的贴子吧！</b>\n//                     </p>\n//                   </div>\n//                 }\n//                 loader={\n//                   <div className=\"flex justify-center items-center w-full pb-0\">\n//                     <Loader />\n//                   </div>\n//                 }\n//               >\n//                 <></>\n//               </InfiniteScroll>\n//             </>\n//           ) : (\n//             <div className=\"text-center flex justify-center flex-col items-center w-full pt-32 px-3\">\n//               <img src={nodata} className=\"w-[110px]\" alt=\"\" />\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default FilteredByType;\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport nodata from \"../../assets/nodata.png\";\n\nimport { useGetHeaderTopicsQuery } from \"../../services/helperService\";\n\nimport Movies from \"./Movies\";\nimport axios from \"axios\";\nimport MovieCard from \"./MovieCard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../../pages/search/components/Loader\";\nimport FilterByTag from \"./FilterByTag\";\nimport {\n  setSort,\n  setClass,\n  setArea,\n  setYear,\n  setSortName,\n} from \"../../pages/home/slice/HomeSlice\";\nimport NewAds from \"../NewAds\";\nimport { convertToSecureUrl } from \"../../services/newEncryption\";\nimport { useGetFilteredDataQuery } from \"../../pages/home/services/homeApi\";\nimport { setIsShowMenu } from \"../../features/counter/counterSlice\";\nimport { setPage2 } from \"../../context/homeMovieSlice\";\nimport { appendMovieData } from \"../../context/homeMovieSlice\";\nimport { setScrollPosition } from \"../../context/homeMovieSlice\";\nimport { setMovieData } from \"../../context/homeMovieSlice\";\n\nconst FilteredByType = () => {\n  const activeTab = useSelector((state: any) => state.home.activeTab);\n  // Get state from Redux\n  const { movieData, page2, scrollPosition } = useSelector(\n    (state: any) => state.homemovie\n  );\n\n  // const [isLoading, setIsLoading] = useState(false);\n  const sort = useSelector((state: any) => state.home.sort);\n  const sortName = useSelector((state: any) => state.home.sortName);\n  const classData = useSelector((state: any) => state.home.class);\n  const area = useSelector((state: any) => state.home.area);\n  const year = useSelector((state: any) => state.home.year);\n  const isShowMenu = useSelector((state: any) => state.counter.isShowMenu);\n\n  // Local state\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [totalData, setTotalData] = useState<any>(null);\n  const [pageSize] = useState(30);\n  const isInitialLoad = useRef(true);\n  const isChanged = useRef(false);\n  const scrollRef = useRef<number>(0); // Add a ref to track scroll position\n\n  const dispatch = useDispatch();\n\n  const { data, isFetching, isLoading } = useGetFilteredDataQuery({\n    id: activeTab,\n    sort,\n    classData,\n    area,\n    year,\n    page,\n    pageSize,\n  });\n\n  const settings = JSON.parse(localStorage.getItem(\"movieAppSettings\") || \"{}\");\n\n  // Set the X-Client-Setting header dynamically\n  const headers = {\n    \"X-Client-Setting\": JSON.stringify({\n      \"pure-mode\": settings.filterToggle ? 1 : 0,\n    }),\n  };\n  // useEffect(() => {\n  //   const handleScroll = () => {\n  //     if (window.scrollY !== 0) {\n  //       scrollRef.current = window.scrollY; // Update ref on scroll\n  //     }\n  //   };\n\n  //   window.addEventListener(\"scroll\", handleScroll, { passive: true });\n\n  //   return () => {\n  //     window.removeEventListener(\"scroll\", handleScroll);\n\n  //     // Save the ref value which is always up-to-date\n  //     if (!isInitialLoad.current) {\n  //       sessionStorage.setItem(\n  //         \"filterMovieScrollPosition1\",\n  //         scrollRef.current.toString()\n  //       );\n  //     }\n  //   };\n  // }, []); // Only depend on isInitialLoad\n\n  // useEffect(() => {\n  //   const savedPosition = sessionStorage.getItem(\"filterMovieScrollPosition1\");\n\n  //   if (savedPosition) {\n  //     const position = parseInt(savedPosition);\n  //     const restore = () => {\n  //       window.scrollTo({\n  //         top: position,\n  //         behavior: \"auto\",\n  //       });\n  //       sessionStorage.removeItem(\"filterMovieScrollPosition1\");\n  //       isInitialLoad.current = false; // Update the ref\n  //     };\n\n  //     const timer = setTimeout(restore, 10);\n  //     return () => clearTimeout(timer);\n  //   } else {\n  //     isInitialLoad.current = false;\n  //   }\n  // }, []);\n\n  const prevFilters = useRef({ sort, area, year, classData, activeTab });\n  // 1. Handle filter changes and data fetching\n  useEffect(() => {\n    const filtersChanged =\n      sort !== prevFilters.current.sort ||\n      area !== prevFilters.current.area ||\n      year !== prevFilters.current.year ||\n      classData !== prevFilters.current.classData ||\n      activeTab !== prevFilters.current.activeTab;\n\n    if (filtersChanged) {\n      setPage(1);\n      dispatch(setPage2(2));\n\n      window.scrollTo({\n        top: 0,\n        behavior: \"auto\",\n      });\n\n      isChanged.current = true;\n\n      // Reset movieData immediately when filters change\n\n      prevFilters.current = { sort, area, year, classData, activeTab };\n    }\n  }, [sort, area, year, classData, activeTab, dispatch]);\n\n  // 2. Handle incoming data separately\n  useEffect(() => {\n    if (!data?.data?.list.length) return;\n\n    // If page is 1 (meaning fresh data), set the movieData\n    if (\n      data?.data?.list.length &&\n      (movieData.length === 0 || isChanged.current)\n    ) {\n      dispatch(setMovieData([]));\n      dispatch(setMovieData(data.data.list));\n      setTotalData(data.data.total);\n      isChanged.current = false;\n    }\n\n    // If we have existing data and page > 1, this would be for infinite scroll\n    // (though your infinite scroll seems to use a different endpoint)\n  }, [data, dispatch]);\n\n  const fetchData = async () => {\n    const nextPage = page2 + 1;\n    dispatch(setPage2(nextPage));\n\n    const { data } = await axios.get(\n      convertToSecureUrl(\n        `${process.env.REACT_APP_API_URL}/movie/screen/list?type_id=${activeTab}&&sort=${sort}&&class=${classData}&&area=${area}&&year=${year}&&pageSize=${pageSize}&&page=${page2}`\n      ),\n      { headers }\n    );\n    dispatch(appendMovieData(data?.data?.list || []));\n  };\n\n  useEffect(() => {\n    if (totalData !== null && movieData.length >= totalData) {\n      setHasMore(false);\n    } else {\n      setHasMore(true);\n    }\n  }, [totalData, movieData]);\n\n  const prevTabRef = useRef(activeTab);\n\n  useEffect(() => {\n    if (prevTabRef.current !== activeTab) {\n      dispatch(setSort(\"by_default\"));\n      dispatch(setSortName(\"综合\"));\n      dispatch(setClass(\"类型\"));\n      dispatch(setArea(\"地区\"));\n      dispatch(setYear(\"年份\"));\n      prevTabRef.current = activeTab;\n    }\n  }, [activeTab]);\n\n  return (\n    <>\n      <div className=\"home-bg\"></div>\n      {isShowMenu ? (\n        <div\n          onClick={() => dispatch(setIsShowMenu(false))}\n          className=\"bg-[#00000080] z-20 fixed top-0 left-0 w-full h-screen\"\n        ></div>\n      ) : (\n        <></>\n      )}\n      <div className=\" mt-[100px] text-text min-h-screen\">\n        <div className=\"\">\n          <FilterByTag paddingTop=\"pt-5\" />\n          <div className=\"mt-5\">\n            <NewAds section=\"topic_movies_top\" />\n          </div>\n          {isFetching || isLoading ? (\n            <div className=\"mt-10 flex justify-center items-center w-full\">\n              <Loader />\n            </div>\n          ) : movieData?.length ? (\n            <>\n              <div className=\"grid grid-cols-3 sm:grid-cols-4 md:grid-cols-6 pl-3 lg:grid-cols-8 gap-y-2 gap-2 mt-0 pt-5 pb-20 px-3\">\n                {movieData?.map((movie: any, index: any) => (\n                  <div key={index} className=\"mx-auto w-full\">\n                    <MovieCard movie={movie} height={\"200px\"} />\n                  </div>\n                ))}\n              </div>\n              <InfiniteScroll\n                dataLength={movieData.length}\n                next={fetchData}\n                hasMore={hasMore}\n                endMessage={\n                  <div className=\"flex bg-background justify-center items-center w-full py-5\">\n                    <p style={{ textAlign: \"center\" }}>\n                      <b>快关注你喜欢的贴子吧！</b>\n                    </p>\n                  </div>\n                }\n                loader={\n                  <div className=\"flex justify-center items-center w-full pb-0\">\n                    <Loader />\n                  </div>\n                }\n              >\n                <></>\n              </InfiniteScroll>\n            </>\n          ) : (\n            <div className=\"text-center flex justify-center flex-col items-center w-full pt-32 px-3\">\n              <img src={nodata} className=\"w-[110px]\" alt=\"\" />\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default FilteredByType;\n","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useCachedImage from \"../../utils/useCachedImage\";\n\nconst HomeAds = ({ data, isLoading }: any) => {\n  const [cur, setCur] = useState<any[]>([]);\n\n  useEffect(() => {\n    const sortedData = [...data].sort((a, b) => b.sort - a.sort);\n    // console.log(sortedData)\n\n    setCur(sortedData || []);\n  }, [data]);\n\n  const AdItemComponent = ({ item }: { item: any }) => {\n    const { imgSrc, isLoading: imageLoading } = useCachedImage(item.data.image);\n\n    return (\n      <Link\n        target=\"_blank\"\n        className=\"flex flex-col justify-center items-center gap-[4px]\"\n        to={item.data?.url || \"#\"}\n      >\n        {imageLoading && (\n          <div className=\"w-[60px] h-[60px] object-cover rounded-[4px] mx-auto bg-white/15 animate-pulse flex justify-center items-center\">\n            <p className=\"text-[13px] font-[500] text-[#888]\">{item.remarks}</p>\n          </div>\n        )}\n        {imgSrc && (\n          <img\n            src={imgSrc}\n            className=\"w-[60px] h-[60px] object-cover rounded-[4px] mx-auto\"\n            alt=\"ad\"\n            loading=\"lazy\"\n          />\n        )}\n        <p className=\"text-[13px] font-[500] text-[#888]\">\n          {item.remarks || \"No description\"}\n        </p>\n      </Link>\n    );\n  };\n\n  return (\n    <div className=\"max-md:px-3 px-10 flex flex-col justify-center\">\n      <div className=\"grid w-full grid-cols-5 md:grid-cols-10 justify-center items-center gap-2 py-1\">\n        {isLoading\n          ? Array.from({ length: 5 }).map((_, index) => (\n              <div\n                key={index}\n                className=\"flex flex-col items-center gap-[4px] animate-pulse\"\n              >\n                <div className=\" bg-white/30 rounded-[10px]\" />\n                <div className=\"w-12 h-3 text-white/30 rounded\">小游戏</div>\n              </div>\n            ))\n          : cur.map((item, index) => (\n              <AdItemComponent key={index} item={item} />\n            ))}\n      </div>\n    </div>\n  );\n};\n\nexport default HomeAds;\n","import Movies from \"../../components/home/Movies\";\nimport Banner from \"../../components/home/Banner\";\nimport { useGetRecommendedMoviesQuery } from \"./services/homeApi\";\nimport Loader from \"../search/components/Loader\";\nimport ContinueWatching from \"../../components/home/ContinueWatching\";\nimport { useSelector } from \"react-redux\";\nimport FilteredByType from \"../../components/home/FilteredByType\";\nimport \"../../components/home/home.css\";\nimport { useGetRecordQuery } from \"../profile/services/profileApi\";\nimport HomeAds from \"../../components/home/HomeAds\";\nimport { useEffect } from \"react\";\n\nconst Home: React.FC = () => {\n  const { data, isLoading, refetch } = useGetRecommendedMoviesQuery();\n  // console.log(data, \"data\");\n  const activeTab = useSelector((state: any) => state.home.activeTab);\n  const isLoggedIn = localStorage.getItem(\"authToken\");\n  const parsedLoggedIn = isLoggedIn ? JSON.parse(isLoggedIn) : null;\n  const token = parsedLoggedIn?.data?.access_token;\n  const { data: movies } = useGetRecordQuery(undefined, { skip: !token });\n\n  useEffect(() => {\n    if (data == undefined) refetch();\n  }, [data]);\n\n  // useEffect(() => {\n  //   window.scrollTo(0, 0);\n  // }, [activeTab]);\n\n  return (\n    <>\n      <div className=\"home-bg\"></div>\n      {activeTab !== 0 ? (\n        <FilteredByType />\n      ) : (\n        <>\n          {data && !isLoading ? (\n            <div className=\"text-text min-h-screen pb-24 flex flex-col gap-5\">\n              {data?.data?.map((movieData: any, index: any) => {\n                if (movieData?.layout === \"index_recommend_carousel\") {\n                  return (\n                    <>\n                      <Banner key={index} list={movieData?.list} />\n                      {movies?.length !== 0 && <ContinueWatching />}\n                    </>\n                  );\n                } else if (movieData?.layout === \"advert_self\") {\n                  return (\n                    <HomeAds data={movieData?.data} isLoading={isLoading} />\n                  );\n                } else if (movieData?.layout === \"base\") {\n                  return <Movies key={index} movieData={movieData} />;\n                }\n              })}\n            </div>\n          ) : (\n            <div className=\"flex justify-center items-center bg-cover min-h-screen home-bg\">\n              <Loader />\n            </div>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["_ref","src","alt","width","height","className","props","imgRef","useRef","loaded","setLoaded","useState","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","current","onload","style","opacity","disconnect","rootMargin","threshold","observe","unobserve","_jsx","children","ref","cardSkeleton","_movie$cover","_movie$cover2","_movie$label","movie","showDynamic","isSlider","_jsxs","Link","to","id","cover","length","name","LazyLoadImage","dynamic","type_name","label","_Fragment","he","_movieData$right","_movieData$right$text","_movieData$right3","movieData","apiMovie","list","dispatch","useDispatch","title","right","text","onClick","_movieData$right2","_movieData$right2$dat","setActiveTab","data","index","rightvg","map","MovieCard","selectedIndex","setSelectedIndex","navigate","useNavigate","handleBannerClick","clickLink","startsWith","a","document","createElement","href","target","rel","body","appendChild","click","removeChild","Carousel","showThumbs","showArrows","showStatus","autoPlay","infiniteLoop","banner","image","type","sub_title","showIndicators","centerMode","centerSlidePercentage","selectedItem","onChange","ContinueWatching","_parsedLoggedIn$data","_moviesData$map","_allMovies$sort","isLoggedIn","localStorage","getItem","parsedLoggedIn","JSON","parse","token","access_token","useGetRecordQuery","undefined","skip","movies","moviesData","allMovies","section","flat","latestMovies","sort","b","update_time","slice","formatDuration","durationInSeconds","hours","Math","floor","minutes","seconds","xmlns","viewBox","fill","d","movie_id","ImageWithPlaceholder","movie_name","current_time","episode_name","duration","FilteredByType","activeTab","useSelector","state","home","page2","scrollPosition","homemovie","classData","sortName","class","area","year","isShowMenu","counter","page","setPage","hasMore","setHasMore","totalData","setTotalData","pageSize","isChanged","isFetching","isLoading","useGetFilteredDataQuery","settings","headers","stringify","filterToggle","prevFilters","setPage2","window","scrollTo","top","behavior","_data$data","_data$data2","setMovieData","total","prevTabRef","setSort","setSortName","setClass","setArea","setYear","setIsShowMenu","FilterByTag","paddingTop","NewAds","Loader","InfiniteScroll","dataLength","next","async","_data$data3","nextPage","axios","get","convertToSecureUrl","appendMovieData","endMessage","textAlign","loader","nodata","cur","setCur","sortedData","AdItemComponent","_ref2","_item$data","item","imgSrc","imageLoading","useCachedImage","url","remarks","loading","Array","from","_","Home","refetch","useGetRecommendedMoviesQuery","layout","Banner","HomeAds","Movies"],"sourceRoot":""}