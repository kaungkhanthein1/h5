{"version":3,"file":"static/js/528.43674730.chunk.js","mappings":"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","sources":["pages/Point/imgs/avat.svg","pages/Point/imgs/diamond.svg","pages/Point/imgs/left.svg","pages/Point/imgs/right.svg","pages/Point/pages/TextVirtual.tsx","pages/Point/components/WinAlert.tsx","pages/Point/pages/Game.tsx","pages/profile/components/info/ImageWithPlaceholder.tsx"],"sourcesContent":["var _rect, _rect2, _path, _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgAvat(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 60,\n    height: 60,\n    viewBox: \"0 0 60 60\",\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 60,\n    height: 60,\n    viewBox: \"0 0 60 60\",\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 60,\n    height: 60,\n    rx: 30,\n    fill: \"url(#paint0_linear_160_3151)\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0.5,\n    y: 0.5,\n    width: 59,\n    height: 59,\n    rx: 29.5,\n    stroke: \"white\",\n    strokeOpacity: 0.12\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M30.0605 7.01392C43.2937 7.01392 53.9873 17.7075 53.9873 31.0744C53.9873 38.1588 50.9129 44.575 46.1008 48.9861C42.8927 31.8764 17.2282 31.8764 14.0202 48.9861C9.07439 44.575 6 38.1588 6 31.0744C6 17.7075 16.6935 7.01392 30.0605 7.01392ZM30.0605 19.0441C34.6052 19.0441 38.348 22.7869 38.348 27.3316C38.348 31.8764 34.6052 35.6191 30.0605 35.6191C25.5157 35.6191 21.773 31.8764 21.773 27.3316C21.773 22.7869 25.5157 19.0441 30.0605 19.0441Z\",\n    fill: \"white\",\n    fillOpacity: 0.8\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_160_3151\",\n    x1: 9.19355,\n    y1: -0.00000184958,\n    x2: 73.7512,\n    y2: 26.4991,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#888888\",\n    stopOpacity: 0.5\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.373765,\n    stopColor: \"#444444\",\n    stopOpacity: 0.27\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.602076,\n    stopColor: \"#5D5A5A\",\n    stopOpacity: 0.291875\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#888080\",\n    stopOpacity: 0.33\n  }))))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAvat);\nexport default __webpack_public_path__ + \"static/media/avat.bed282952a6d011a04318515339f4dd0.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgDiamond(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 19,\n    height: 18,\n    viewBox: \"0 0 19 18\",\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M1.54968 2.24091C1.88911 2.10076 2.27097 2.2859 2.51139 2.56362C2.68418 2.76344 2.89883 2.92278 3.14011 3.03033C3.42695 3.15857 3.74228 3.20982 4.05497 3.17904C4.36767 3.14826 4.66695 3.03651 4.92329 2.8548C5.17963 2.67309 5.38418 2.4277 5.51676 2.14284C5.64935 1.85797 5.7054 1.54347 5.67938 1.23034C5.6511 0.878053 5.77581 0.49234 6.09724 0.341911L6.62438 0.0937695C6.92076 -0.0295866 7.2538 -0.0312967 7.55144 0.0890092C7.84907 0.209315 8.08738 0.441964 8.2148 0.736624L8.8358 2.17405L8.76894 2.31933L8.76766 2.3219L4.66624 11.7937L4.22139 12.8056L0.420829 4.01133C0.306566 3.72651 0.303705 3.40911 0.412816 3.12228C0.521926 2.83545 0.735012 2.6002 1.00968 2.46333L1.54968 2.24091ZM16.1065 4.81747C16.3443 4.53718 16.7275 4.35333 17.0669 4.49218L17.6365 4.72747C17.9186 4.86748 18.1375 5.10874 18.2495 5.40308C18.3615 5.69742 18.3584 6.02318 18.2408 6.31532L13.5196 17.2439C13.3894 17.5465 13.1449 17.7855 12.8394 17.909C12.534 18.0325 12.1921 18.0305 11.8881 17.9034L6.1821 15.4721C5.87953 15.3421 5.64045 15.098 5.51673 14.7928C5.39301 14.4876 5.39463 14.1459 5.52124 13.8419L6.13967 12.4366L10.2449 2.95705C10.375 2.65448 10.6191 2.4154 10.9243 2.29168C11.2295 2.16796 11.5712 2.16958 11.8752 2.29619L12.4332 2.55719C12.7546 2.70762 12.8794 3.09333 12.8472 3.4469C12.8235 3.7153 12.8582 3.98567 12.9489 4.23936C13.0397 4.49306 13.1844 4.72407 13.3731 4.91647C13.5537 5.09968 13.7705 5.24334 14.0096 5.33833C14.2488 5.43332 14.505 5.47756 14.7622 5.46826C15.0193 5.45895 15.2717 5.39629 15.5034 5.28426C15.735 5.17223 15.9408 5.01327 16.1078 4.81747\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgDiamond);\nexport default __webpack_public_path__ + \"static/media/diamond.c79a3f40e5f12f2d6cfd1ea5bf14655f.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgLeft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 12,\n    height: 17,\n    viewBox: \"0 0 12 17\",\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.9847 1.12831C10.8657 1.02906 10.7245 0.950306 10.569 0.896575C10.4134 0.842843 10.2467 0.815186 10.0783 0.815186C9.90996 0.815186 9.74323 0.842843 9.58771 0.896575C9.43219 0.950306 9.29093 1.02906 9.17201 1.12831L0.661795 8.21394C0.566858 8.29283 0.491538 8.38653 0.440148 8.48968C0.388757 8.59282 0.362305 8.7034 0.362305 8.81507C0.362305 8.92674 0.388757 9.03732 0.440148 9.14047C0.491538 9.24362 0.566858 9.33732 0.661795 9.4162L9.17201 16.5018C9.67382 16.9196 10.4829 16.9196 10.9847 16.5018C11.4865 16.084 11.4865 15.4104 10.9847 14.9926L3.57022 8.81081L10.9949 2.629C11.4865 2.21972 11.4865 1.53759 10.9847 1.12831Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLeft);\nexport default __webpack_public_path__ + \"static/media/left.7edbbaf63d75b8649a658c4c3e52bf76.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgRight(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 12,\n    height: 17,\n    viewBox: \"0 0 12 17\",\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.677448 0.945696C0.79636 0.846439 0.937623 0.767689 1.09314 0.713958C1.24867 0.660226 1.41539 0.632568 1.58377 0.632568C1.75215 0.632568 1.91888 0.660226 2.0744 0.713958C2.22992 0.767689 2.37118 0.846439 2.4901 0.945696L11.0003 8.03133C11.0953 8.11021 11.1706 8.20391 11.222 8.30706C11.2734 8.41021 11.2998 8.52078 11.2998 8.63246C11.2998 8.74413 11.2734 8.8547 11.222 8.95785C11.1706 9.061 11.0953 9.1547 11.0003 9.23358L2.4901 16.3192C1.98829 16.737 1.17925 16.737 0.677448 16.3192C0.175643 15.9014 0.175643 15.2278 0.677448 14.81L8.09189 8.62819L0.66721 2.44638C0.175644 2.0371 0.175643 1.35497 0.677448 0.945696Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgRight);\nexport default __webpack_public_path__ + \"static/media/right.a8afc3510361bdc9d98ab34f6b15dffb.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport { Autoplay } from \"swiper/modules\";\nimport '../point.css'\n\ninterface VirtualProps {\n  data: any;\n}\n\nconst TextVirtual: React.FC<VirtualProps> = ({ data }) => {\n  return (\n    // <Swiper\n    //   direction=\"vertical\"\n    //   slidesPerView={1}\n    //   spaceBetween={50}\n    //   loop={true}\n    //   autoplay={{ delay: 2000, disableOnInteraction: false }}\n    //   modules={[Autoplay]}\n    //   className=\"h-[20px]\"\n    //   allowTouchMove={false}\n    // >\n    //   {data?.data?.virtual_lottery_winners?.map((item: any, index: number) => {\n    //     const template = item.text || \"用户 :name 成功瓜分红包 :price\";\n\n    //     // Split into parts around the placeholders\n    //     const parts = template.split(/(:name|:price)/g);\n\n    //     return (\n    //       <SwiperSlide key={index}>\n    //         <div className=\"text-white/80 text-[16px] tracking-wide text-center font-[400]\">\n    //           {parts.map((part: any, i: any) => {\n    //             if (part === \":name\") {\n    //               return (\n    //                 <span key={i} className=\"font-bold text-white\">\n    //                   {item.name}\n    //                 </span>\n    //               );\n    //             }\n    //             if (part === \":price\") {\n    //               return (\n    //                 <span key={i} className=\"font-bold text-white\">\n    //                   {item.price}\n    //                 </span>\n    //               );\n    //             }\n    //             return <span key={i}>{part}</span>;\n    //           })}\n    //         </div>\n    //       </SwiperSlide>\n    //     );\n    //   })}\n    // </Swiper>\n    <div className=\"new_v_text_box w-[230px] flex justify-center items-center\">\n      <div className=\"relative w-[208px] h-fit py-[8px] overflow-hidden  flex items-center\">\n        <div className=\"scroll-animation\">\n          {data?.data?.virtual_lottery_winners?.map(\n            (item: any, index: number) => {\n              const template = item.text || \"用户 :name 成功瓜分红包 :price\";\n              const parts = template.split(/(:name|:price)/g);\n              return (\n                <span\n                  key={index}\n                  className=\"inline-block px-4 text-white/80 text-[14px] tracking-wide font-[400]\"\n                >\n                  {parts.map((part: any, i: any) => {\n                    if (part === \":name\") {\n                      return (\n                        <span key={i} className=\"font-bold text-white\">\n                          {item.name}\n                        </span>\n                      );\n                    }\n                    if (part === \":price\") {\n                      return (\n                        <span key={i} className=\"font-bold text-white\">\n                          {item.price}\n                        </span>\n                      );\n                    }\n                    return <span key={i}>{part}</span>;\n                  })}\n                </span>\n              );\n            }\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TextVirtual;\n","import { FC, useCallback, Fragment } from \"react\";\nimport { Dialog, Transition } from \"@headlessui/react\";\nimport { useNavigate } from \"react-router-dom\";\nimport winbg from \"../imgs/reward.webp\";\nimport \"../point.css\";\n\ninterface WinAlertProps {\n  onClose: () => void;\n  msg: string;\n  show: boolean;\n  img: string;\n  btnText: string;\n}\n\nconst WinAlert: React.FC<WinAlertProps> = ({\n  onClose,\n  msg,\n  show,\n  img,\n  btnText,\n}) => {\n  const navigate = useNavigate();\n\n  // console.log(msg, show);\n\n  return (\n    <Transition show={show} as={Fragment}>\n      <Dialog open={true} onClose={onClose}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"z-20 fixed inset-0 bg-black/60\" />\n        </Transition.Child>\n\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0 scale-95\"\n          enterTo=\"opacity-100 scale-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100 scale-100\"\n          leaveTo=\"opacity-0 scale-95\"\n        >\n          <div className=\"fixed z-30 inset-0 overflow-y-auto\">\n            <div className=\"flex min-h-full items-center justify-center p-4\">\n              <div className=\" relative h-[400px] flex justify-center items-center w-full\">\n                <img className=\" w-[290px] h-[400px]\" src={winbg} alt=\"\" />\n                <div className=\" absolute w-[260px] py-5 flex flex-col justify-between items-center rounded-2xl h-[250px] top-[30px] \">\n                  <h1 className=\"congrat_text flex justify-center gap-[10px] items-center text-[24px] font-[500]\">\n                    <span className=\" test_congrat_line1\"></span> 恭喜获得{\" \"}\n                    <span className=\"test_congrat_line2 rotate-180\"></span>\n                  </h1>\n                  <img className=\" w-[80px] h-[80px]\" src={img} alt=\"\" />\n                  <h1 className=\"congrat_text text-[20px] font-[600]\">{msg}</h1>\n                </div>\n                <button\n                  className=\"congrat_accept_btn text-[18px] font-[700] py-[9px] px-[40px] rounded-[12px] absolute bottom-5 text-[#4E2A00]\"\n                  onClick={onClose}\n                >\n                  {btnText}\n                </button>\n              </div>\n            </div>\n          </div>\n        </Transition.Child>\n      </Dialog>\n    </Transition>\n  );\n};\n\nexport default WinAlert;\n","import { FC, useState, Fragment, useMemo, useRef, useEffect } from \"react\";\nimport { useRequest, useSafeState, useLockFn } from \"ahooks\";\nimport { useSpring, animated } from \"@react-spring/web\";\nimport { GameHead, Loader, Panel, Alert } from \"../components\";\nimport { getLotteryItems, sendSpin } from \"../api\";\nimport { sortWith, ascend, prop } from \"ramda\";\nimport dayjs from \"dayjs\";\nimport fakeUser from \"../imgs/avat.svg\";\nimport numeral from \"numeral\";\n// @ts-ignore\nimport { LuckyWheel } from \"@lucky-canvas/react\";\nimport { useWatch } from \"react-hook-form\";\nimport newBg from \"../imgs/newBg.jpg\";\nimport newHead from \"../imgs/newHead.png\";\nimport crowd from \"../imgs/crowd.png\";\nimport btnbg from \"../imgs/btnbg.png\";\nimport diamond from \"../imgs/diamond.svg\";\nimport left from \"../imgs/left.svg\";\nimport right from \"../imgs/right.svg\";\nimport { useGetUserQuery } from \"../../../pages/profile/services/profileApi\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport { Navigation } from \"swiper/modules\";\nimport lock from \"../imgs/lock.png\";\nimport cc from \"../../Point/coupon.png\";\nimport TextVirtual from \"./TextVirtual\";\nimport { useNavigate } from \"react-router-dom\";\nimport WinAlert from \"../components/WinAlert\";\nimport { setAuthModel } from \"../../../features/login/ModelSlice\";\nimport { useDispatch } from \"react-redux\";\nimport ImageWithPlaceholder from \"../../../pages/profile/components/info/ImageWithPlaceholder\";\n\nexport const Game = () => {\n  const myLucky = useRef<any>();\n  const isLoggedIn = localStorage.getItem(\"authToken\");\n  const parsedLoggedIn = isLoggedIn ? JSON.parse(isLoggedIn) : null;\n  const [spinLoad, setSpinLoad] = useState(false);\n  const { data, error, loading, refresh } = useRequest<any, any>(() =>\n    getLotteryItems()\n  );\n  const token = parsedLoggedIn?.data?.access_token;\n  const { data: userData, refetch } = useGetUserQuery(undefined, {\n    skip: !token,\n  });\n  const navigate = useNavigate();\n\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  // staging\n  // const parsedUserData = JSON.parse(userData || \"{}\");\n\n  // prod\n  const parsedUserData = userData;\n\n  // console.log(parsedUserData);\n\n  const [prizeItem, setPrizeItem] = useState<any>(); //中奖物品\n  const [hasNext, setHasNext] = useState<boolean>(true); //是否可以抽奖\n  const [lockid, setLockid] = useState<boolean>(false); //防抖\n  const dispatch = useDispatch();\n  const [msg, setMsg] = useState<any>({\n    show: false,\n    msg: \"\",\n  });\n  const [win, setWin] = useState<any>({\n    show: false,\n    msg: \"\",\n    img: \"\",\n  });\n  const smallWidthRatio = window.innerWidth < 390;\n  const [blocks] = useState([{ padding: \"0px\", background: \"#E51D17\" }]);\n  const [prizes, setPrizes] = useState<any[]>([]);\n  const [swiperInstance, setSwiperInstance] = useState(null);\n\n  const [canSlidePrev, setCanSlidePrev] = useState(false);\n  const [canSlideNext, setCanSlideNext] = useState(true);\n  const [spinGroups, setSpinGroups] = useState<any[]>([]);\n  const myLuckyRefs = useRef<any[]>([]);\n  const currentGroup = spinGroups[activeIndex];\n  const isLocked = !currentGroup?.is_unlocked;\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  // Add this new function to determine image dimensions\n  const getPrizeImageDimensions = (prizeType: string) => {\n    if (prizeType === \"item\") {\n      return {\n        width: 50,\n        height: 50,\n        top: 35,\n      };\n    }\n    // Default dimensions for coins and other prizes\n    return {\n      width: 24,\n      height: 24,\n      top: 40,\n    };\n  };\n\n  const handleLogin = () => {\n    dispatch(setAuthModel(true));\n  };\n\n  useEffect(() => {\n    refresh();\n  }, [token]);\n\n  useEffect(() => {\n    if (spinGroups.length > 0) {\n      setCanSlidePrev(currentIndex > 0);\n      setCanSlideNext(currentIndex < spinGroups.length - 1);\n    }\n  }, [spinGroups, currentIndex]);\n\n  const handleSlideChange = (swiper: any) => {\n    setCurrentIndex(swiper.activeIndex);\n    setActiveIndex(swiper.activeIndex);\n    setCanSlidePrev(swiper.activeIndex > 0);\n    setCanSlideNext(swiper.activeIndex < spinGroups.length - 1);\n  };\n\n  const [buttons] = useState([\n    {\n      radius: \"40%\",\n      pointer: true,\n      imgs: [\n        {\n          src: \"./pointer.png\",\n          top: -60,\n          width: 100,\n          height: 115,\n        },\n      ],\n    },\n  ]);\n\n  // console.log(userData);\n\n  // useEffect(() => {\n  //   const list: any[] = [];\n  //   console.log(data?.data)\n  //   // @ts-ignore\n  //   const sortList = sortWith([ascend(prop(\"id\"))])(data?.data?.prizes ?? []);\n  //   sortList.forEach((prize: any) => {\n  //     list.push({\n  //       background: \"#FFF7DF\",\n  //       fonts: [\n  //         {\n  //           text: prize.name,\n  //           fontColor: \"#E1281E\",\n  //           fontSize: 16,\n  //           fontWeight: 500,\n  //           top: 10,\n  //           fontStyle: \"PingFang SC\",\n  //         },\n  //       ],\n  //       imgs: [\n  //         {\n  //           src: prize.image,\n  //           top: 40,\n  //           width: 24,\n  //           height: 24,\n  //         },\n  //       ],\n  //     });\n  //   });\n\n  //   setPrizes(list);\n  // }, [data?.data]);\n\n  const getButtonConfig = (group: any) => {\n    const defaultImg = {\n      src: \"./pointer.png\",\n      top: -60,\n      width: 100,\n      height: 115,\n    };\n\n    return [\n      {\n        radius: \"40%\",\n        pointer: true,\n        imgs: group?.spinwheel_image\n          ? [\n              {\n                src: group.spinwheel_image,\n                top: -50,\n                width: 73,\n                height: 88,\n              },\n            ]\n          : [defaultImg],\n      },\n    ];\n  };\n\n  const buttonConfigs = data?.data?.prize_groups?.map((group: any) =>\n    getButtonConfig(group)\n  );\n\n  useEffect(() => {\n    if (!data?.data?.prize_groups) return;\n\n    const formattedGroups = data.data.prize_groups.map((group: any) => {\n      const sorted = group.prizes.sort((a: any, b: any) => a.id - b.id);\n\n      const formattedPrizes = sorted.map((prize: any) => {\n        const dimensions = getPrizeImageDimensions(prize.prize_type);\n        return {\n          id: prize.id,\n          background: \"#FFF7DF\",\n          fonts: [\n            {\n              text: prize.name,\n              fontColor: \"#E1281E\",\n              fontSize: 14,\n              fontWeight: 900,\n              top: 10,\n              fontStyle: \"PingFang SC\",\n              padding: \"20px\",\n            },\n          ],\n          imgs: [\n            {\n              src: prize.image,\n              top: dimensions.top,\n              width: dimensions.width,\n              height: dimensions.height,\n            },\n          ],\n        };\n      });\n\n      return {\n        group_id: group.group_id,\n        name: group.name,\n        prizes: formattedPrizes,\n        free_draws_per_day: group.free_draws_per_day,\n        is_unlocked: group.is_unlocked,\n        activity_max: group.activity_max,\n        button_state: group.button_state,\n      };\n    });\n\n    setSpinGroups(formattedGroups);\n  }, [data?.data]);\n\n  const handleEnd = () => {\n    setLockid(false);\n    refresh();\n    refetch();\n    setSpinLoad(false);\n    if (prizeItem?.win_status) {\n      // setMsg({\n      //   show: true,\n      //   msg: `恭喜您获得${prizeItem.prize.name}`,\n      // });\n      setWin({\n        show: true,\n        msg: `${prizeItem.prize.name}`,\n        img: `${prizeItem.prize.image}`,\n        btnText: \"开心收下\",\n      });\n    } else {\n      // setMsg({\n      //   show: true,\n      //   msg: `谢谢参与,您未中奖`,\n      // });\n      setWin({\n        show: true,\n        msg: `${prizeItem.prize.name}`,\n        img: `${prizeItem.prize.image}`,\n        btnText: \"我知道了\",\n      });\n    }\n  };\n\n  // const handleStart = useLockFn(async () => {\n  //   const obj = data?.data;\n  //   if (!obj.open_now) {\n  //     setMsg({\n  //       show: true,\n  //       msg: obj.open_hours_text,\n  //     });\n  //     return;\n  //   }\n  //   if (!hasNext || lockid) {\n  //     return;\n  //   }\n\n  //   if (!loading) {\n  //     setLockid(true);\n  //     setPrizeItem(undefined);\n  //     let index = 0;\n\n  //     try {\n  //       const res = await sendSpin();\n  //       myLucky.current.play();\n  //       // @ts-ignore\n  //       const sortList = sortWith([ascend(prop(\"id\"))])(\n  //         data?.data?.prizes ?? []\n  //       );\n  //       sortList?.forEach?.((i: any, k: number) => {\n  //         if (i.id === res.data.prize.id) {\n  //           index = k;\n  //         }\n  //       });\n\n  //       // @ts-ignore\n  //       setHasNext(res?.data?.has_next);\n  //       setPrizeItem(res.data);\n  //       refresh();\n  //     } catch (e) {\n  //       setLockid(!true);\n  //       setMsg({\n  //         show: true,\n  //         msg: e,\n  //       });\n  //     }\n  //     myLucky.current.stop(index);\n  //   }\n  // });\n\n  const handleStart = useLockFn(async () => {\n    if (!token) {\n      handleLogin();\n      return;\n    }\n    const obj = data?.data;\n    const currentGroup = spinGroups[activeIndex];\n\n    if (data?.data?.user_tickets === 0) {\n      setMsg({\n        show: true,\n        msg: \"抽奖劵不足，请通过邀请好友获取\",\n        navBtn: \"获取抽奖劵\",\n      });\n      return;\n    }\n\n    if (!currentGroup?.is_unlocked && data?.data?.progress_percent < 50) {\n      setMsg({\n        show: true,\n        msg: \"少侠，您的等级过低没有资格参加此活动\",\n        navBtn: true,\n      });\n      return;\n    } else if (\n      !currentGroup?.is_unlocked &&\n      data?.data?.progress_percent > 50\n    ) {\n      setMsg({\n        show: true,\n        msg: \"少侠，您的武学境界已超凡脱俗，此轮盘不再适用于您\",\n        navBtn: true,\n        btnText: \"前往更高级转盘\",\n        opentask: false,\n      });\n      swiperRef.current.slideTo(3);\n\n      return;\n    }\n\n    if (!hasNext || lockid || !currentGroup) return;\n\n    const luckyRef = myLuckyRefs.current[activeIndex];\n    if (!luckyRef) return;\n\n    if (!loading) {\n      setSpinLoad(true);\n      setLockid(true);\n      setPrizeItem(undefined);\n      console.log(currentGroup.group_id);\n\n      try {\n        // You may need to pass group_id to the API here:\n        const res = await sendSpin(currentGroup.group_id);\n\n        luckyRef.play();\n\n        let index = 0;\n        console.log(currentGroup);\n        const sorted = [...currentGroup.prizes].sort((a, b) => a.id - b.id);\n        sorted.forEach((p, i) => {\n          if (p.id === res.data.prize.id) {\n            index = i;\n          }\n        });\n        luckyRef.stop(index);\n\n        setHasNext(res?.data?.has_next);\n        setPrizeItem(res.data);\n        refresh();\n      } catch (e) {\n        setMsg({ show: true, msg: e });\n        setSpinLoad(false);\n      }\n\n      // luckyRef.stop(index);\n      setLockid(false);\n    }\n  });\n\n  const groupImages = data?.data?.prize_groups?.map((group: any) => ({\n    id: group.group_id,\n    src: group.image,\n    isUnlocked: group.is_unlocked,\n    name: group.name,\n  }));\n\n  const userIntegral = parsedUserData?.data?.active;\n\n  // // Determine current level and level bounds\n  // const levelThresholds = [0, 2000, 4000, 9000];\n  // let levelMin = 0;\n  // let levelMax = levelThresholds[levelThresholds.length - 1];\n\n  // for (let i = 1; i < levelThresholds.length; i++) {\n  //   if (userIntegral < levelThresholds[i]) {\n  //     levelMin = levelThresholds[i - 1];\n  //     levelMax = levelThresholds[i];\n  //     break;\n  //   }\n  // }\n\n  // const levelRange = levelMax - levelMin;\n  // const progressPercent = Math.min(\n  //   ((userIntegral - levelMin) / levelRange) * 100,\n  //   100\n  // );\n\n  // console.log(progressPercent, levelRange);\n\n  // const progressPercent =\n  //   userIntegral < 100\n  //     ? 10\n  //     : userIntegral / 100 > 100\n  //     ? 100\n  //     : Math.max(userIntegral / 100, 5);\n  const progressPercent = data?.data?.progress_percent;\n  const swiperRef = useRef<any>(null);\n\n  useEffect(() => {\n    window.scrollTo(0,100)\n  },[])\n\n  // Set active index when spinGroups is ready\n  useEffect(() => {\n    if (swiperRef.current && spinGroups.length > 0) {\n      const unlockedIndex = spinGroups.findIndex((group) => group.is_unlocked);\n      if (unlockedIndex >= 0) {\n        swiperRef.current.slideTo(unlockedIndex, 0); // Slide without animation\n      }\n    }\n  }, [spinGroups]);\n\n  // console.log(currentGroup);\n\n  return (\n    <div className=\"container \">\n      <Alert\n        {...msg}\n        onClose={() => {\n          setMsg({ msg: \"\", show: false });\n        }}\n      />\n      <WinAlert\n        {...win}\n        onClose={() => {\n          setWin({ msg: \"\", show: false, img: \"\" });\n        }}\n      />\n      <img alt=\"\" src={newBg} className=\"fixed w-full h-screen z-0\" />\n      <GameHead />\n      {/* event */}\n        <div className=\"px-6 pb-1 flex justify-center absolute top-[-10px]\">\n          <img alt=\"\" src={newHead} className=\"\" />\n          <span className=\"new_date_head_text text-[14px] font-[700] absolute bottom-[35px]\">\n            {/* 2025-06-15-16:30 */}\n            {data?.data?.end_date ?? \"2025-06-15-16:30\"}\n          </span>\n        </div>\n      <div className=\"flex flex-col py-[1px] justify-cente items-center relative\">\n        {/* userBox */}\n        <div className=\"new_user_box mt-[110px] p-[12px] w-[350px] flex justify-between items-center\">\n          {/* user */}\n          <div className=\" flex justify-center items-center gap-[8px]\">\n            {/* <img\n              className=\" w-[48px] h-[48px] rounded-full\"\n              src={\n                parsedUserData?.data?.avatar\n                  ? parsedUserData?.data?.avata\n                  : fakeUser\n              }\n              alt=\"\"\n            /> */}\n            <ImageWithPlaceholder\n              width={48}\n              height={48}\n              src={\n                parsedUserData?.data?.avatar\n                  ? parsedUserData?.data?.avatar\n                  : fakeUser\n              }\n              alt=\"user\"\n              className=\"rounded-full\"\n            />\n            <div className=\"\">\n              <h1 className=\" text-[#512D00] text-[16px] font-[700]\">\n                {parsedUserData?.data?.nickname ?? \"登录或注册账号\"}\n              </h1>\n              {parsedUserData?.data?.level ? (\n                <img\n                  className=\" w-[72px] h-[24px]\"\n                  src={parsedUserData?.data?.level}\n                  alt=\"\"\n                />\n              ) : (\n                <span className=\" text-[#64421A] text=[16px] font-[600]\">\n                  解锁更多精彩奖励\n                </span>\n              )}\n            </div>\n          </div>\n          {/* btn */}\n          <button className=\" relative w-[130px] overflow-hidden flex justify-center items-center py-[18px] gap-[4px] rounded-[14px]\">\n            <img src={btnbg} className=\" absolute z-[1]\" alt=\"\" />\n            {token ? (\n              <div\n                onClick={() => navigate(\"/point_info\")}\n                className=\" absolute flex gap-1 justify-center items-center z-[2]\"\n              >\n                <span className=\" text-white text-[14px] font-[700]\">\n                  获取抽奖劵\n                </span>\n                <img src={diamond} alt=\"\" />\n              </div>\n            ) : (\n              <div\n                onClick={handleLogin}\n                className=\" absolute flex gap-1 justify-center items-center z-[2]\"\n              >\n                <span className=\" text-white text-[14px] font-[700]\">\n                  点击登录\n                </span>\n              </div>\n            )}\n          </button>\n        </div>\n\n        {/* progress */}\n        <div className=\"relative w-[350px] overflow-hidden max-w-4xl mx-auto py-5\">\n          {/* Background Line (incomplete section) */}\n          <div className=\"absolute top-1/2 left-0 right-0 h-3 bg-white/40 rounded-full transform -translate-y-1/2 z-0\" />\n\n          {/* Progress Line (completed section, use actual percent if needed) */}\n          <div\n            className=\"absolute top-1/2 left-0 h-3 bg-white rounded-full transform -translate-y-1/2 z-0\"\n            style={{\n              // width: `${((currentIndex + 1) / groupImages?.length) * 100}%`,\n              width: `${progressPercent}%`,\n            }}\n          />\n\n          {/* Step Images */}\n          <div className=\"relative flex justify-between items-center z-10 px-2\">\n            {groupImages?.map((img: any, idx: any) => (\n              <div\n                key={img.id}\n                className=\"relative w-[54px] flex flex-col items-center h-[38px] cursor-pointer\"\n                onClick={() => {\n                  if (swiperRef.current) {\n                    swiperRef.current.slideTo(idx);\n                  }\n                }}\n              >\n                <img\n                  src={img.src || crowd}\n                  alt={`Step ${idx + 1}`}\n                  className={`w-full h-full object-cover ${\n                    currentIndex === idx ? \" scale-125\" : \"\"\n                  }`}\n                />\n                <h1\n                  className={`  font-[700] ${\n                    currentIndex === idx\n                      ? \"active_progress_text text-[13px]\"\n                      : \"text-white/60 text-[12px]\"\n                  }`}\n                >\n                  {img.name}\n                </h1>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* spin */}\n        <div className=\"relative w-full h-[468px] hidden\">\n          <img\n            alt=\"\"\n            src=\"./zp.png\"\n            className={`absolute z-[1]  left-[50%] ${\n              smallWidthRatio\n                ? \"ml-[-160px]  w-[320px]\"\n                : \"ml-[-195px] w-[390px] \"\n            }`}\n          />\n          <div\n            className={`absolute z-[2] flex justify-center items-center w-full h-[408px] ${\n              smallWidthRatio ? \"mt-[-37px]\" : \"\"\n            }`}\n          >\n            <LuckyWheel\n              ref={myLucky}\n              width={smallWidthRatio ? \"220px\" : \"270px\"}\n              height={smallWidthRatio ? \"220px\" : \"270px\"}\n              defaultConfig={{\n                gutter: 6,\n              }}\n              blocks={blocks}\n              prizes={prizes}\n              buttons={buttons}\n              onStart={handleStart}\n              onEnd={handleEnd}\n            />\n          </div>\n          <div\n            className={`h-[20px] w-[128px] absolute z-[3] ${\n              smallWidthRatio ? \"bottom-[148px]\" : \"bottom-[80px]\"\n            } left-[50%] ml-[-58px] text-[12px] text-white truncate`}\n          >\n            {data?.data?.open_now ? (\n              <span>\n                今日免费抽奖次数{data?.data?.today_available_free_num}/\n                {data?.data?.free_draws_per_day}\n              </span>\n            ) : (\n              <span>{data?.data?.open_hours_text}</span>\n            )}\n          </div>\n        </div>\n\n        {/* newSpin */}\n        <Swiper\n          modules={[Navigation]}\n          navigation={{\n            nextEl: \".custom-next\",\n            prevEl: \".custom-prev\",\n          }}\n          onSwiper={(swiper: any) => {\n            swiperRef.current = swiper;\n            setSwiperInstance(swiper);\n          }}\n          onSlideChange={handleSlideChange}\n          slidesPerView={1}\n          spaceBetween={50}\n          className=\" absolute bottom-10 w-full h-[455px]\"\n        >\n          {spinGroups.map((group, index) => (\n            <SwiperSlide key={group.group_id}>\n              <div className=\"relative w-full h-[468px]\">\n                <img\n                  alt=\"\"\n                  src=\"./zp.png\"\n                  className={`absolute z-[1] left-[50%] ${\n                    smallWidthRatio\n                      ? \"ml-[-160px] w-[320px]\"\n                      : \"ml-[-195px] w-[390px]\"\n                  }`}\n                />\n                {/* spin */}\n                <div\n                  className={`absolute z-[2] flex justify-center items-center w-full h-[408px] ${\n                    smallWidthRatio ? \"mt-[-37px]\" : \"\"\n                  }`}\n                >\n                  <LuckyWheel\n                    ref={(el: any) => (myLuckyRefs.current[index] = el)}\n                    // ref={myLucky}\n                    width={smallWidthRatio ? \"220px\" : \"270px\"}\n                    height={smallWidthRatio ? \"220px\" : \"270px\"}\n                    defaultConfig={{ gutter: 6 }}\n                    blocks={blocks}\n                    prizes={group.prizes}\n                    // buttons={buttons}\n                    buttons={buttonConfigs?.[index]}\n                    onStart={handleStart}\n                    onEnd={handleEnd}\n                  />\n\n                  {/* virtual_lottery_winners */}\n                  <div className=\" absolute w-full flex justify-center bottom-[-50px]\">\n                    <TextVirtual data={data} />\n                  </div>\n                </div>\n\n                {/* Optional: group-specific info */}\n                <div\n                  className={`h-[20px] w-[128px] absolute z-[3] ${\n                    smallWidthRatio ? \"bottom-[148px]\" : \"bottom-[80px]\"\n                  } left-[50%] ml-[-58px] text-[13px] font-[900] text-white truncate`}\n                >\n                  <span className=\" flex justify-center items-center\">\n                    抽奖劵 x {data?.data?.user_tickets} <img src={cc} alt=\"\" />{\" \"}\n                  </span>\n\n                  {/* {data?.data?.open_now ? (\n                    <span>\n                      今日免费抽奖次数{data?.data?.today_available_free_num}/\n                      {data?.data?.free_draws_per_day}\n                    </span>\n                  ) : (\n                    <span>{data?.data?.open_hours_text}</span>\n                  )} */}\n                </div>\n              </div>\n            </SwiperSlide>\n          ))}\n\n          {/* Navigation Buttons outside of loop */}\n          <div\n            className={`custom-prev absolute left-0 top-[45%] transform -translate-y-1/2 z-10 cursor-pointer ${\n              canSlidePrev ? \"\" : \"hidden\"\n            }`}\n          >\n            <button className=\"w-10 h-10 rounded-full shadow-md flex items-center justify-center\">\n              <img src={left} alt=\"prev\" />\n            </button>\n          </div>\n\n          <div\n            className={`custom-next absolute right-0 top-[45%] transform -translate-y-1/2 z-10 cursor-pointer ${\n              canSlideNext ? \"\" : \"hidden\"\n            }`}\n          >\n            <button className=\"w-10 h-10 rounded-full shadow-md flex items-center justify-center\">\n              <img src={right} alt=\"next\" className=\"w-4 h-4\" />\n            </button>\n          </div>\n        </Swiper>\n\n        {loading || spinLoad ? (\n          <button\n            //  onTouchEnd={handleStart}\n            //  onClick={handleStart}\n            className=\"w-11/12 h-12 px-[100px] mb-8 py-3 bg-zinc-300 rounded-[49px] shadow shadow-inner border border-zinc-300 justify-center items-center inline-flex  bottom-[50px] z-[999]\"\n          >\n            <div className=\"text-center text-orange-900 text-base font-medium leading-normal\">\n              加载中...\n            </div>\n          </button>\n        ) : (\n          <>\n            {data?.data?.open_now ? (\n              <button\n                // disabled={isLocked}\n                // onTouchEnd={handleStart}\n                onClick={handleStart}\n                className={`w-11/12 h-12 mb-2 py-3 bg-amber ${\n                  isLocked || currentGroup?.button_state === \"disabled\"\n                    ? \"new_spin_button_lock\"\n                    : \"new_spin_button\"\n                } rounded-[49px] shadow-inner border border-orange-200 justify-center items-center inline-flex gap-1  bottom-[50px]`}\n              >\n                <div className=\"text-center text-orange-900 text-base font-medium leading-normal\">\n                  {/* 开始抽奖{\" \"}\n                  {data?.data?.today_available_free_num >= 1\n                    ? ``\n                    : `(消耗${data?.data?.points_per_draw}积分)`} */}\n                  {isLocked && currentGroup?.button_state === \"enabled\"\n                    ? \"尚未解锁\"\n                    : \"开始抽奖\"}\n                </div>\n                {isLocked && currentGroup?.button_state === \"enabled\" && (\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"14\"\n                    height=\"16\"\n                    viewBox=\"0 0 14 16\"\n                    fill=\"none\"\n                  >\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M7 0.299805C8.11391 0.299805 9.18207 0.742621 9.96973 1.53027C10.7574 2.31793 11.2002 3.38609 11.2002 4.5V6.59961H11.9004C13.06 6.59971 13.9999 7.54057 14 8.7002V13.5996C14 14.7593 13.0601 15.7001 11.9004 15.7002H2.10059C0.940788 15.7002 0 14.7594 0 13.5996V8.7002C0.000132015 7.54051 0.940869 6.59961 2.10059 6.59961H2.7998V4.5C2.7998 3.38609 3.24262 2.31793 4.03027 1.53027C4.81793 0.742621 5.88609 0.299805 7 0.299805ZM7 1.7002C6.25739 1.7002 5.54561 1.99541 5.02051 2.52051C4.49541 3.04561 4.2002 3.75739 4.2002 4.5V6.59961H9.7998V4.5C9.7998 3.75739 9.50459 3.04561 8.97949 2.52051C8.45439 1.99541 7.74261 1.7002 7 1.7002Z\"\n                      fill=\"#64421A\"\n                    />\n                  </svg>\n                )}\n              </button>\n            ) : (\n              <button\n                onTouchEnd={handleStart}\n                onClick={handleStart}\n                className=\"w-11/12 h-12 mb-8 px-[100px] py-3 bg-zinc-300 rounded-[49px] shadow shadow-inner border border-zinc-300 justify-center items-center inline-flex bottom-[50px] z-[99]\"\n              >\n                <div className=\"text-center text-neutral-400 text-base font-medium leading-normal\">\n                  活动暂未开放\n                </div>\n              </button>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n","import { useEffect, useRef } from \"react\";\nimport cardSkeleton from \"../../../search/images/cardSkeleton.png\";\n\ntype ImageWithPlaceholderProps = {\n  src: any;\n  alt: string;\n  width: string | number;\n  height: string | number;\n  className: string;\n};\n\nconst ImageWithPlaceholder = ({\n  src,\n  alt,\n  width,\n  height,\n  className,\n  ...props\n}: ImageWithPlaceholderProps) => {\n  const imgRef = useRef<HTMLImageElement | null>(null);\n  const containerRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            if (imgRef.current) {\n              imgRef.current.src = src;\n              imgRef.current.onload = () => {\n                if (imgRef.current && imgRef.current !== null) {\n                  imgRef.current.style.opacity = \"1\";\n                }\n              };\n            }\n            observer.disconnect();\n          }\n        });\n      },\n      {\n        rootMargin: \"100px\",\n        threshold: 0.1,\n      }\n    );\n\n    if (imgRef.current) {\n      observer.observe(imgRef.current);\n    }\n\n    return () => {\n      if (imgRef.current) {\n        observer.unobserve(imgRef.current);\n      }\n    };\n  }, [src]);\n\n  return (\n    <div\n      ref={containerRef}\n      className=\"image-container1\"\n      style={{ width: width, height: height }}\n    >\n      <img\n        ref={imgRef}\n        src={cardSkeleton}\n        alt={alt}\n        style={{ width: width, height: height }}\n        className={`${className} image-placeholder1`}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default ImageWithPlaceholder;\n"],"names":["_ref","_data$data","_data$data$virtual_lo","data","_jsx","className","children","virtual_lottery_winners","map","item","index","parts","text","split","part","i","name","price","onClose","msg","show","img","btnText","useNavigate","Transition","as","Fragment","_jsxs","Dialog","open","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","src","winbg","alt","onClick","Game","_parsedLoggedIn$data","_data$data$prize_grou","_data$data6","_data$data6$prize_gro","_parsedUserData$data","_data$data7","_data$data$end_date","_data$data8","_parsedUserData$data2","_parsedUserData$data3","_parsedUserData$data$","_parsedUserData$data4","_parsedUserData$data5","_parsedUserData$data6","_data$data9","_data$data10","_data$data11","_data$data12","_data$data14","myLucky","useRef","isLoggedIn","localStorage","getItem","parsedLoggedIn","JSON","parse","spinLoad","setSpinLoad","useState","error","loading","refresh","useRequest","getLotteryItems","token","access_token","userData","refetch","useGetUserQuery","undefined","skip","navigate","activeIndex","setActiveIndex","parsedUserData","prizeItem","setPrizeItem","hasNext","setHasNext","lockid","setLockid","dispatch","useDispatch","setMsg","win","setWin","smallWidthRatio","window","innerWidth","blocks","padding","background","prizes","setPrizes","swiperInstance","setSwiperInstance","canSlidePrev","setCanSlidePrev","canSlideNext","setCanSlideNext","spinGroups","setSpinGroups","myLuckyRefs","currentGroup","isLocked","is_unlocked","currentIndex","setCurrentIndex","handleLogin","setAuthModel","useEffect","length","buttons","radius","pointer","imgs","top","width","height","buttonConfigs","prize_groups","group","spinwheel_image","getButtonConfig","_data$data2","formattedGroups","formattedPrizes","sort","a","b","id","prize","dimensions","prize_type","fonts","fontColor","fontSize","fontWeight","fontStyle","image","group_id","free_draws_per_day","activity_max","button_state","handleEnd","win_status","handleStart","useLockFn","async","_data$data3","_data$data4","_data$data5","user_tickets","navBtn","progress_percent","opentask","swiperRef","current","slideTo","luckyRef","_res$data","res","sendSpin","play","forEach","p","stop","has_next","e","groupImages","isUnlocked","progressPercent","active","scrollTo","unlockedIndex","findIndex","Alert","WinAlert","newBg","GameHead","newHead","end_date","ImageWithPlaceholder","avatar","fakeUser","nickname","level","btnbg","diamond","style","idx","LuckyWheel","ref","defaultConfig","gutter","onStart","onEnd","open_now","today_available_free_num","open_hours_text","Swiper","modules","Navigation","navigation","nextEl","prevEl","onSwiper","swiper","onSlideChange","slidesPerView","spaceBetween","_data$data13","SwiperSlide","el","TextVirtual","cc","left","right","_Fragment","xmlns","viewBox","fill","d","onTouchEnd","props","imgRef","containerRef","observer","IntersectionObserver","entries","entry","isIntersecting","onload","opacity","disconnect","rootMargin","threshold","observe","unobserve","cardSkeleton"],"sourceRoot":""}